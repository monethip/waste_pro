{"version":3,"sources":["webpack:///../../../src/components/VMessages/VMessages.ts","webpack:///../../../src/components/VMessages/index.ts","webpack:///../../../src/components/VInput/VInput.ts","webpack:///../../../src/components/VInput/index.ts","webpack:///../../../src/mixins/intersectable/index.ts","webpack:///../../../src/mixins/validatable/index.ts","webpack:///../../../src/components/VCounter/VCounter.ts","webpack:///../../../src/components/VCounter/index.ts","webpack:///../../../src/components/VTextField/VTextField.ts","webpack:///../../../src/components/VLabel/VLabel.ts","webpack:///../../../src/components/VLabel/index.ts"],"names":["mixins","Colorable","Themeable","extend","name","props","value","type","Array","default","methods","genChildren","this","$createElement","staticClass","attrs","tag","map","genMessage","message","key","getSlot","render","h","setTextColor","color","class","themeClasses","VMessages","baseMixins","BindsAttrs","Validatable","inheritAttrs","appendIcon","String","backgroundColor","dense","Boolean","height","Number","hideDetails","hideSpinButtons","hint","id","label","loading","persistentHint","prependIcon","data","lazyValue","hasMouseDown","computed","classes","hasState","showDetails","isLabelActive","isDirty","isDisabled","isFocused","isReadonly","computedId","_uid","hasDetails","messagesToDisplay","length","hasHint","hasMessages","hasLabel","$slots","internalValue","get","set","val","$emit","$_modelEvent","validations","validation","validationResult","filter","watch","beforeCreate","$options","model","event","genContent","genPrependSlot","genControl","genAppendSlot","title","attrs$","genInputSlot","genMessages","genDefaultSlot","genLabel","genIcon","cb","extraData","icon","eventName","kebabCase","hasListener","listeners$","localeKey","prepend","prependInner","append","appendOuter","clear","$vuetify","lang","t","_a","undefined","mergeData","validationState","dark","disabled","light","tabindex","on","click","e","preventDefault","stopPropagation","mouseup","VIcon","setBackgroundColor","style","convertToUnit","onClick","mousedown","onMouseDown","onMouseUp","ref","VLabel","focused","for","role","scopedSlots","genSlot","location","slot","push","VInput","intersectable","options","Vue","isIntersecting","mounted","Intersect","inserted","$el","onObserve","$vnode","destroyed","unbind","entries","observer","i","onVisible","callback","consoleWarn","RegistrableInject","error","errorCount","errorMessages","messages","readonly","rules","success","successMessages","validateOnBlur","required","errorBucket","hasColor","hasFocused","hasInput","isResetting","valid","computedColor","isDark","appIsDark","hasError","internalErrorMessages","hasSuccess","internalSuccessMessages","externalError","validationTarget","shouldValidate","genInternalMessages","internalMessages","form","isInteractive","slice","handler","newVal","oldVal","deepEqual","validate","deep","$nextTick","setTimeout","beforeMount","created","register","beforeDestroy","unregister","isArray","reset","resetValidation","force","index","rule","consoleError","functional","max","ctx","parseInt","content","isGreater","functionalThemeClasses","VCounter","Intersectable","Loadable","dirtyTypes","directives","resize","ripple","appendOuterIcon","autofocus","clearable","clearIcon","counter","counterValue","Function","filled","flat","fullWidth","outlined","placeholder","prefix","prependInnerIcon","persistentPlaceholder","reverse","rounded","shaped","singleLine","solo","soloInverted","suffix","badInput","labelWidth","prefixWidth","prependWidth","initialValue","isBooted","isClearing","call","isSingle","isSolo","isEnclosed","computedCounterValue","toString","hasCounter","includes","labelPosition","offset","labelValue","rtl","left","right","showLabel","setLabelWidth","setPrefixWidth","$attrs","hasOwnProperty","breaking","$watch","tryAutofocus","requestAnimationFrame","onResize","focus","onFocus","blur","window","$refs","input","clearableCallback","genPrependInnerSlot","genIconSlot","children","unshift","genClearIcon","genCounter","maxlength","_c","_b","$scopedSlots","genFieldset","genTextFieldSlot","genProgress","genLegend","absolute","width","span","domProps","innerHTML","genInput","listeners","Object","assign","change","inputAttrs","is","onBlur","onInput","keydown","onKeyDown","modifiers","quiet","messagesNode","counterNode","genAffix","root","attachedRoot","activeElement","target","validity","keyCode","keyCodes","enter","Math","min","scrollWidth","offsetWidth","setPrependWidth","document","updateValue","newData","position"],"mappings":"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","file":"js/chunk-182c2d5e.d6b5e26e.js","sourcesContent":["// Styles\nimport './VMessages.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport mixins from '../../util/mixins'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\n\n/* @vue/component */\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-messages',\n\n  props: {\n    value: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<string[]>,\n  },\n\n  methods: {\n    genChildren () {\n      return this.$createElement('transition-group', {\n        staticClass: 'v-messages__wrapper',\n        attrs: {\n          name: 'message-transition',\n          tag: 'div',\n        },\n      }, this.value.map(this.genMessage))\n    },\n    genMessage (message: string, key: number) {\n      return this.$createElement('div', {\n        staticClass: 'v-messages__message',\n        key,\n      }, getSlot(this, 'default', { message, key }) || [message])\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.setTextColor(this.color, {\n      staticClass: 'v-messages',\n      class: this.themeClasses,\n    }), [this.genChildren()])\n  },\n})\n","import VMessages from './VMessages'\n\nexport { VMessages }\nexport default VMessages\n","// Styles\nimport './VInput.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport VLabel from '../VLabel'\nimport VMessages from '../VMessages'\n\n// Mixins\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport Validatable from '../../mixins/validatable'\n\n// Utilities\nimport {\n  convertToUnit,\n  getSlot,\n  kebabCase,\n} from '../../util/helpers'\nimport mergeData from '../../util/mergeData'\n\n// Types\nimport { VNode, VNodeData, PropType } from 'vue'\nimport mixins from '../../util/mixins'\nimport { InputValidationRule } from 'vuetify/types'\n\nconst baseMixins = mixins(\n  BindsAttrs,\n  Validatable,\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  /* eslint-disable-next-line camelcase */\n  $_modelEvent: string\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-input',\n\n  inheritAttrs: false,\n\n  props: {\n    appendIcon: String,\n    backgroundColor: {\n      type: String,\n      default: '',\n    },\n    dense: Boolean,\n    height: [Number, String],\n    hideDetails: [Boolean, String] as PropType<boolean | 'auto'>,\n    hideSpinButtons: Boolean,\n    hint: String,\n    id: String,\n    label: String,\n    loading: Boolean,\n    persistentHint: Boolean,\n    prependIcon: String,\n    value: null as any as PropType<any>,\n  },\n\n  data () {\n    return {\n      lazyValue: this.value,\n      hasMouseDown: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-input--has-state': this.hasState,\n        'v-input--hide-details': !this.showDetails,\n        'v-input--is-label-active': this.isLabelActive,\n        'v-input--is-dirty': this.isDirty,\n        'v-input--is-disabled': this.isDisabled,\n        'v-input--is-focused': this.isFocused,\n        // <v-switch loading>.loading === '' so we can't just cast to boolean\n        'v-input--is-loading': this.loading !== false && this.loading != null,\n        'v-input--is-readonly': this.isReadonly,\n        'v-input--dense': this.dense,\n        'v-input--hide-spin-buttons': this.hideSpinButtons,\n        ...this.themeClasses,\n      }\n    },\n    computedId (): string {\n      return this.id || `input-${this._uid}`\n    },\n    hasDetails (): boolean {\n      return this.messagesToDisplay.length > 0\n    },\n    hasHint (): boolean {\n      return !this.hasMessages &&\n        !!this.hint &&\n        (this.persistentHint || this.isFocused)\n    },\n    hasLabel (): boolean {\n      return !!(this.$slots.label || this.label)\n    },\n    // Proxy for `lazyValue`\n    // This allows an input\n    // to function without\n    // a provided model\n    internalValue: {\n      get (): any {\n        return this.lazyValue\n      },\n      set (val: any) {\n        this.lazyValue = val\n        this.$emit(this.$_modelEvent, val)\n      },\n    },\n    isDirty (): boolean {\n      return !!this.lazyValue\n    },\n    isLabelActive (): boolean {\n      return this.isDirty\n    },\n    messagesToDisplay (): string[] {\n      if (this.hasHint) return [this.hint]\n\n      if (!this.hasMessages) return []\n\n      return this.validations.map((validation: string | InputValidationRule) => {\n        if (typeof validation === 'string') return validation\n\n        const validationResult = validation(this.internalValue)\n\n        return typeof validationResult === 'string' ? validationResult : ''\n      }).filter(message => message !== '')\n    },\n    showDetails (): boolean {\n      return this.hideDetails === false || (this.hideDetails === 'auto' && this.hasDetails)\n    },\n  },\n\n  watch: {\n    value (val) {\n      this.lazyValue = val\n    },\n  },\n\n  beforeCreate () {\n    // v-radio-group needs to emit a different event\n    // https://github.com/vuetifyjs/vuetify/issues/4752\n    this.$_modelEvent = (this.$options.model && this.$options.model.event) || 'input'\n  },\n\n  methods: {\n    genContent () {\n      return [\n        this.genPrependSlot(),\n        this.genControl(),\n        this.genAppendSlot(),\n      ]\n    },\n    genControl () {\n      return this.$createElement('div', {\n        staticClass: 'v-input__control',\n        attrs: { title: this.attrs$.title },\n      }, [\n        this.genInputSlot(),\n        this.genMessages(),\n      ])\n    },\n    genDefaultSlot () {\n      return [\n        this.genLabel(),\n        this.$slots.default,\n      ]\n    },\n    genIcon (\n      type: string,\n      cb?: (e: Event) => void,\n      extraData: VNodeData = {}\n    ) {\n      const icon = (this as any)[`${type}Icon`]\n      const eventName = `click:${kebabCase(type)}`\n      const hasListener = !!(this.listeners$[eventName] || cb)\n\n      const localeKey = {\n        prepend: 'prependAction',\n        prependInner: 'prependAction',\n        append: 'appendAction',\n        appendOuter: 'appendAction',\n        clear: 'clear',\n      }[type]\n      const label = hasListener && localeKey\n        ? this.$vuetify.lang.t(`$vuetify.input.${localeKey}`, this.label ?? '')\n        : undefined\n\n      const data = mergeData({\n        attrs: {\n          'aria-label': label,\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.isDisabled,\n          light: this.light,\n          tabindex: type === 'clear' ? -1 : undefined,\n        },\n        on: !hasListener\n          ? undefined\n          : {\n            click: (e: Event) => {\n              e.preventDefault()\n              e.stopPropagation()\n\n              this.$emit(eventName, e)\n              cb && cb(e)\n            },\n            // Container has g event that will\n            // trigger menu open if enclosed\n            mouseup: (e: Event) => {\n              e.preventDefault()\n              e.stopPropagation()\n            },\n          },\n      }, extraData)\n\n      return this.$createElement('div', {\n        staticClass: `v-input__icon`,\n        class: type ? `v-input__icon--${kebabCase(type)}` : undefined,\n      }, [\n        this.$createElement(\n          VIcon,\n          data,\n          icon\n        ),\n      ])\n    },\n    genInputSlot () {\n      return this.$createElement('div', this.setBackgroundColor(this.backgroundColor, {\n        staticClass: 'v-input__slot',\n        style: { height: convertToUnit(this.height) },\n        on: {\n          click: this.onClick,\n          mousedown: this.onMouseDown,\n          mouseup: this.onMouseUp,\n        },\n        ref: 'input-slot',\n      }), [this.genDefaultSlot()])\n    },\n    genLabel () {\n      if (!this.hasLabel) return null\n\n      return this.$createElement(VLabel, {\n        props: {\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.isDisabled,\n          focused: this.hasState,\n          for: this.computedId,\n          light: this.light,\n        },\n      }, this.$slots.label || this.label)\n    },\n    genMessages () {\n      if (!this.showDetails) return null\n\n      return this.$createElement(VMessages, {\n        props: {\n          color: this.hasHint ? '' : this.validationState,\n          dark: this.dark,\n          light: this.light,\n          value: this.messagesToDisplay,\n        },\n        attrs: {\n          role: this.hasMessages ? 'alert' : null,\n        },\n        scopedSlots: {\n          default: props => getSlot(this, 'message', props),\n        },\n      })\n    },\n    genSlot (\n      type: string,\n      location: string,\n      slot: (VNode | VNode[])[]\n    ) {\n      if (!slot.length) return null\n\n      const ref = `${type}-${location}`\n\n      return this.$createElement('div', {\n        staticClass: `v-input__${ref}`,\n        ref,\n      }, slot)\n    },\n    genPrependSlot () {\n      const slot = []\n\n      if (this.$slots.prepend) {\n        slot.push(this.$slots.prepend)\n      } else if (this.prependIcon) {\n        slot.push(this.genIcon('prepend'))\n      }\n\n      return this.genSlot('prepend', 'outer', slot)\n    },\n    genAppendSlot () {\n      const slot = []\n\n      // Append icon for text field was really\n      // an appended inner icon, v-text-field\n      // will overwrite this method in order to obtain\n      // backwards compat\n      if (this.$slots.append) {\n        slot.push(this.$slots.append)\n      } else if (this.appendIcon) {\n        slot.push(this.genIcon('append'))\n      }\n\n      return this.genSlot('append', 'outer', slot)\n    },\n    onClick (e: Event) {\n      this.$emit('click', e)\n    },\n    onMouseDown (e: Event) {\n      this.hasMouseDown = true\n      this.$emit('mousedown', e)\n    },\n    onMouseUp (e: Event) {\n      this.hasMouseDown = false\n      this.$emit('mouseup', e)\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.setTextColor(this.validationState, {\n      staticClass: 'v-input',\n      class: this.classes,\n    }), this.genContent())\n  },\n})\n","import VInput from './VInput'\n\nexport { VInput }\nexport default VInput\n","// Directives\nimport Intersect from '../../directives/intersect'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue from 'vue'\n\nexport default function intersectable (options: { onVisible: string[] }) {\n  return Vue.extend({\n    name: 'intersectable',\n\n    data: () => ({\n      isIntersecting: false,\n    }),\n\n    mounted () {\n      Intersect.inserted(this.$el as HTMLElement, {\n        name: 'intersect',\n        value: this.onObserve,\n      }, this.$vnode)\n    },\n\n    destroyed () {\n      Intersect.unbind(this.$el as HTMLElement, {\n        name: 'intersect',\n        value: this.onObserve,\n      }, this.$vnode)\n    },\n\n    methods: {\n      onObserve (entries: IntersectionObserverEntry[], observer: IntersectionObserver, isIntersecting: boolean) {\n        this.isIntersecting = isIntersecting\n\n        if (!isIntersecting) return\n\n        for (let i = 0, length = options.onVisible.length; i < length; i++) {\n          const callback = (this as any)[options.onVisible[i]]\n\n          if (typeof callback === 'function') {\n            callback()\n            continue\n          }\n\n          consoleWarn(options.onVisible[i] + ' method is not available on the instance but referenced in intersectable mixin options')\n        }\n      },\n    },\n  })\n}\n","// Mixins\nimport Colorable from '../colorable'\nimport Themeable from '../themeable'\nimport { inject as RegistrableInject } from '../registrable'\n\n// Utilities\nimport { deepEqual } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\nimport { InputMessage, InputValidationRules } from 'vuetify/types'\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject<'form', any>('form'),\n  Themeable,\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'validatable',\n\n  props: {\n    disabled: {\n      type: Boolean,\n      default: null,\n    },\n    error: Boolean,\n    errorCount: {\n      type: [Number, String],\n      default: 1,\n    },\n    errorMessages: {\n      type: [String, Array],\n      default: () => [],\n    } as PropValidator<InputMessage | null>,\n    messages: {\n      type: [String, Array],\n      default: () => [],\n    } as PropValidator<InputMessage | null>,\n    readonly: {\n      type: Boolean,\n      default: null,\n    },\n    rules: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<InputValidationRules>,\n    success: Boolean,\n    successMessages: {\n      type: [String, Array],\n      default: () => [],\n    } as PropValidator<InputMessage | null>,\n    validateOnBlur: Boolean,\n    value: { required: false },\n  },\n\n  data () {\n    return {\n      errorBucket: [] as string[],\n      hasColor: false,\n      hasFocused: false,\n      hasInput: false,\n      isFocused: false,\n      isResetting: false,\n      lazyValue: this.value,\n      valid: false,\n    }\n  },\n\n  computed: {\n    computedColor (): string | undefined {\n      if (this.isDisabled) return undefined\n      if (this.color) return this.color\n      // It's assumed that if the input is on a\n      // dark background, the user will want to\n      // have a white color. If the entire app\n      // is setup to be dark, then they will\n      // like want to use their primary color\n      if (this.isDark && !this.appIsDark) return 'white'\n      else return 'primary'\n    },\n    hasError (): boolean {\n      return (\n        this.internalErrorMessages.length > 0 ||\n        this.errorBucket.length > 0 ||\n        this.error\n      )\n    },\n    // TODO: Add logic that allows the user to enable based\n    // upon a good validation\n    hasSuccess (): boolean {\n      return (\n        this.internalSuccessMessages.length > 0 ||\n        this.success\n      )\n    },\n    externalError (): boolean {\n      return this.internalErrorMessages.length > 0 || this.error\n    },\n    hasMessages (): boolean {\n      return this.validationTarget.length > 0\n    },\n    hasState (): boolean {\n      if (this.isDisabled) return false\n\n      return (\n        this.hasSuccess ||\n        (this.shouldValidate && this.hasError)\n      )\n    },\n    internalErrorMessages (): InputValidationRules {\n      return this.genInternalMessages(this.errorMessages)\n    },\n    internalMessages (): InputValidationRules {\n      return this.genInternalMessages(this.messages)\n    },\n    internalSuccessMessages (): InputValidationRules {\n      return this.genInternalMessages(this.successMessages)\n    },\n    internalValue: {\n      get (): unknown {\n        return this.lazyValue\n      },\n      set (val: any) {\n        this.lazyValue = val\n\n        this.$emit('input', val)\n      },\n    },\n    isDisabled (): boolean {\n      return this.disabled ?? (\n        !!this.form &&\n        this.form.disabled\n      )\n    },\n    isInteractive (): boolean {\n      return !this.isDisabled && !this.isReadonly\n    },\n    isReadonly (): boolean {\n      return this.readonly ?? (\n        !!this.form &&\n        this.form.readonly\n      )\n    },\n    shouldValidate (): boolean {\n      if (this.externalError) return true\n      if (this.isResetting) return false\n\n      return this.validateOnBlur\n        ? this.hasFocused && !this.isFocused\n        : (this.hasInput || this.hasFocused)\n    },\n    validations (): InputValidationRules {\n      return this.validationTarget.slice(0, Number(this.errorCount))\n    },\n    validationState (): string | undefined {\n      if (this.isDisabled) return undefined\n      if (this.hasError && this.shouldValidate) return 'error'\n      if (this.hasSuccess) return 'success'\n      if (this.hasColor) return this.computedColor\n      return undefined\n    },\n    validationTarget (): InputValidationRules {\n      if (this.internalErrorMessages.length > 0) {\n        return this.internalErrorMessages\n      } else if (this.successMessages && this.successMessages.length > 0) {\n        return this.internalSuccessMessages\n      } else if (this.messages && this.messages.length > 0) {\n        return this.internalMessages\n      } else if (this.shouldValidate) {\n        return this.errorBucket\n      } else return []\n    },\n  },\n\n  watch: {\n    rules: {\n      handler (newVal, oldVal) {\n        if (deepEqual(newVal, oldVal)) return\n        this.validate()\n      },\n      deep: true,\n    },\n    internalValue () {\n      // If it's the first time we're setting input,\n      // mark it with hasInput\n      this.hasInput = true\n      this.validateOnBlur || this.$nextTick(this.validate)\n    },\n    isFocused (val) {\n      // Should not check validation\n      // if disabled\n      if (\n        !val &&\n        !this.isDisabled\n      ) {\n        this.hasFocused = true\n        this.validateOnBlur && this.$nextTick(this.validate)\n      }\n    },\n    isResetting () {\n      setTimeout(() => {\n        this.hasInput = false\n        this.hasFocused = false\n        this.isResetting = false\n        this.validate()\n      }, 0)\n    },\n    hasError (val) {\n      if (this.shouldValidate) {\n        this.$emit('update:error', val)\n      }\n    },\n    value (val) {\n      this.lazyValue = val\n    },\n  },\n\n  beforeMount () {\n    this.validate()\n  },\n\n  created () {\n    this.form && this.form.register(this)\n  },\n\n  beforeDestroy () {\n    this.form && this.form.unregister(this)\n  },\n\n  methods: {\n    genInternalMessages (messages: InputMessage | null): InputValidationRules {\n      if (!messages) return []\n      else if (Array.isArray(messages)) return messages\n      else return [messages]\n    },\n    /** @public */\n    reset () {\n      this.isResetting = true\n      this.internalValue = Array.isArray(this.internalValue)\n        ? []\n        : null\n    },\n    /** @public */\n    resetValidation () {\n      this.isResetting = true\n    },\n    /** @public */\n    validate (force = false, value?: any): boolean {\n      const errorBucket = []\n      value = value || this.internalValue\n\n      if (force) this.hasInput = this.hasFocused = true\n\n      for (let index = 0; index < this.rules.length; index++) {\n        const rule = this.rules[index]\n        const valid = typeof rule === 'function' ? rule(value) : rule\n\n        if (valid === false || typeof valid === 'string') {\n          errorBucket.push(valid || '')\n        } else if (typeof valid !== 'boolean') {\n          consoleError(`Rules should return a string or boolean, received '${typeof valid}' instead`, this)\n        }\n      }\n\n      this.errorBucket = errorBucket\n      this.valid = errorBucket.length === 0\n\n      return this.valid\n    },\n  },\n})\n","// Styles\nimport './VCounter.sass'\n\n// Mixins\nimport Themeable, { functionalThemeClasses } from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(Themeable).extend({\n  name: 'v-counter',\n\n  functional: true,\n\n  props: {\n    value: {\n      type: [Number, String],\n      default: '',\n    },\n    max: [Number, String],\n  },\n\n  render (h, ctx): VNode {\n    const { props } = ctx\n    const max = parseInt(props.max, 10)\n    const value = parseInt(props.value, 10)\n    const content = max ? `${value} / ${max}` : String(props.value)\n    const isGreater = max && (value > max)\n\n    return h('div', {\n      staticClass: 'v-counter',\n      class: {\n        'error--text': isGreater,\n        ...functionalThemeClasses(ctx),\n      },\n    }, content)\n  },\n})\n","import VCounter from './VCounter'\n\nexport { VCounter }\nexport default VCounter\n","// Styles\nimport './VTextField.sass'\n\n// Extensions\nimport VInput from '../VInput'\n\n// Components\nimport VCounter from '../VCounter'\nimport VLabel from '../VLabel'\n\n// Mixins\nimport Intersectable from '../../mixins/intersectable'\nimport Loadable from '../../mixins/loadable'\nimport Validatable from '../../mixins/validatable'\n\n// Directives\nimport resize from '../../directives/resize'\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { attachedRoot } from '../../util/dom'\nimport { convertToUnit, keyCodes } from '../../util/helpers'\nimport { breaking, consoleWarn } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, PropType } from 'vue/types'\n\nconst baseMixins = mixins(\n  VInput,\n  Intersectable({\n    onVisible: [\n      'onResize',\n      'tryAutofocus',\n    ],\n  }),\n  Loadable,\n)\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\nconst dirtyTypes = ['color', 'file', 'time', 'date', 'datetime-local', 'week', 'month']\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-text-field',\n\n  directives: {\n    resize,\n    ripple,\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    appendOuterIcon: String,\n    autofocus: Boolean,\n    clearable: Boolean,\n    clearIcon: {\n      type: String,\n      default: '$clear',\n    },\n    counter: [Boolean, Number, String],\n    counterValue: Function as PropType<(value: any) => number>,\n    filled: Boolean,\n    flat: Boolean,\n    fullWidth: Boolean,\n    label: String,\n    outlined: Boolean,\n    placeholder: String,\n    prefix: String,\n    prependInnerIcon: String,\n    persistentPlaceholder: Boolean,\n    reverse: Boolean,\n    rounded: Boolean,\n    shaped: Boolean,\n    singleLine: Boolean,\n    solo: Boolean,\n    soloInverted: Boolean,\n    suffix: String,\n    type: {\n      type: String,\n      default: 'text',\n    },\n  },\n\n  data: () => ({\n    badInput: false,\n    labelWidth: 0,\n    prefixWidth: 0,\n    prependWidth: 0,\n    initialValue: null,\n    isBooted: false,\n    isClearing: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-text-field': true,\n        'v-text-field--full-width': this.fullWidth,\n        'v-text-field--prefix': this.prefix,\n        'v-text-field--single-line': this.isSingle,\n        'v-text-field--solo': this.isSolo,\n        'v-text-field--solo-inverted': this.soloInverted,\n        'v-text-field--solo-flat': this.flat,\n        'v-text-field--filled': this.filled,\n        'v-text-field--is-booted': this.isBooted,\n        'v-text-field--enclosed': this.isEnclosed,\n        'v-text-field--reverse': this.reverse,\n        'v-text-field--outlined': this.outlined,\n        'v-text-field--placeholder': this.placeholder,\n        'v-text-field--rounded': this.rounded,\n        'v-text-field--shaped': this.shaped,\n      }\n    },\n    computedColor (): string | undefined {\n      const computedColor = Validatable.options.computed.computedColor.call(this)\n\n      if (!this.soloInverted || !this.isFocused) return computedColor\n\n      return this.color || 'primary'\n    },\n    computedCounterValue (): number {\n      if (typeof this.counterValue === 'function') {\n        return this.counterValue(this.internalValue)\n      }\n      return [...(this.internalValue || '').toString()].length\n    },\n    hasCounter (): boolean {\n      return this.counter !== false && this.counter != null\n    },\n    hasDetails (): boolean {\n      return VInput.options.computed.hasDetails.call(this) || this.hasCounter\n    },\n    internalValue: {\n      get (): any {\n        return this.lazyValue\n      },\n      set (val: any) {\n        this.lazyValue = val\n        this.$emit('input', this.lazyValue)\n      },\n    },\n    isDirty (): boolean {\n      return this.lazyValue?.toString().length > 0 || this.badInput\n    },\n    isEnclosed (): boolean {\n      return (\n        this.filled ||\n        this.isSolo ||\n        this.outlined\n      )\n    },\n    isLabelActive (): boolean {\n      return this.isDirty || dirtyTypes.includes(this.type)\n    },\n    isSingle (): boolean {\n      return (\n        this.isSolo ||\n        this.singleLine ||\n        this.fullWidth ||\n        // https://material.io/components/text-fields/#filled-text-field\n        (this.filled && !this.hasLabel)\n      )\n    },\n    isSolo (): boolean {\n      return this.solo || this.soloInverted\n    },\n    labelPosition (): Record<'left' | 'right', string | number | undefined> {\n      let offset = (this.prefix && !this.labelValue) ? this.prefixWidth : 0\n\n      if (this.labelValue && this.prependWidth) offset -= this.prependWidth\n\n      return (this.$vuetify.rtl === this.reverse) ? {\n        left: offset,\n        right: 'auto',\n      } : {\n        left: 'auto',\n        right: offset,\n      }\n    },\n    showLabel (): boolean {\n      return this.hasLabel && !(this.isSingle && this.labelValue)\n    },\n    labelValue (): boolean {\n      return this.isFocused || this.isLabelActive || this.persistentPlaceholder\n    },\n  },\n\n  watch: {\n    // labelValue: 'setLabelWidth', // moved to mounted, see #11533\n    outlined: 'setLabelWidth',\n    label () {\n      this.$nextTick(this.setLabelWidth)\n    },\n    prefix () {\n      this.$nextTick(this.setPrefixWidth)\n    },\n    isFocused: 'updateValue',\n    value (val) {\n      this.lazyValue = val\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('box')) {\n      breaking('box', 'filled', this)\n    }\n\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('browser-autocomplete')) {\n      breaking('browser-autocomplete', 'autocomplete', this)\n    }\n\n    /* istanbul ignore if */\n    if (this.shaped && !(this.filled || this.outlined || this.isSolo)) {\n      consoleWarn('shaped should be used with either filled or outlined', this)\n    }\n  },\n\n  mounted () {\n    // #11533\n    this.$watch(() => this.labelValue, this.setLabelWidth)\n    this.autofocus && this.tryAutofocus()\n    requestAnimationFrame(() => {\n      this.isBooted = true\n      requestAnimationFrame(() => {\n        if (!this.isIntersecting) {\n          this.onResize()\n        }\n      })\n    })\n  },\n\n  methods: {\n    /** @public */\n    focus () {\n      this.onFocus()\n    },\n    /** @public */\n    blur (e?: Event) {\n      // https://github.com/vuetifyjs/vuetify/issues/5913\n      // Safari tab order gets broken if called synchronous\n      window.requestAnimationFrame(() => {\n        this.$refs.input && this.$refs.input.blur()\n      })\n    },\n    clearableCallback () {\n      this.$refs.input && this.$refs.input.focus()\n      this.$nextTick(() => this.internalValue = null)\n    },\n    genAppendSlot () {\n      const slot = []\n\n      if (this.$slots['append-outer']) {\n        slot.push(this.$slots['append-outer'] as VNode[])\n      } else if (this.appendOuterIcon) {\n        slot.push(this.genIcon('appendOuter'))\n      }\n\n      return this.genSlot('append', 'outer', slot)\n    },\n    genPrependInnerSlot () {\n      const slot = []\n\n      if (this.$slots['prepend-inner']) {\n        slot.push(this.$slots['prepend-inner'] as VNode[])\n      } else if (this.prependInnerIcon) {\n        slot.push(this.genIcon('prependInner'))\n      }\n\n      return this.genSlot('prepend', 'inner', slot)\n    },\n    genIconSlot () {\n      const slot = []\n\n      if (this.$slots.append) {\n        slot.push(this.$slots.append as VNode[])\n      } else if (this.appendIcon) {\n        slot.push(this.genIcon('append'))\n      }\n\n      return this.genSlot('append', 'inner', slot)\n    },\n    genInputSlot () {\n      const input = VInput.options.methods.genInputSlot.call(this)\n\n      const prepend = this.genPrependInnerSlot()\n\n      if (prepend) {\n        input.children = input.children || []\n        input.children.unshift(prepend)\n      }\n\n      return input\n    },\n    genClearIcon () {\n      if (!this.clearable) return null\n\n      // if the text field has no content then don't display the clear icon.\n      // We add an empty div because other controls depend on a ref to append inner\n      if (!this.isDirty) {\n        return this.genSlot('append', 'inner', [\n          this.$createElement('div'),\n        ])\n      }\n\n      return this.genSlot('append', 'inner', [\n        this.genIcon('clear', this.clearableCallback),\n      ])\n    },\n    genCounter () {\n      if (!this.hasCounter) return null\n\n      const max = this.counter === true ? this.attrs$.maxlength : this.counter\n\n      const props = {\n        dark: this.dark,\n        light: this.light,\n        max,\n        value: this.computedCounterValue,\n      }\n\n      return this.$scopedSlots.counter?.({ props }) ?? this.$createElement(VCounter, { props })\n    },\n    genControl () {\n      return VInput.options.methods.genControl.call(this)\n    },\n    genDefaultSlot () {\n      return [\n        this.genFieldset(),\n        this.genTextFieldSlot(),\n        this.genClearIcon(),\n        this.genIconSlot(),\n        this.genProgress(),\n      ]\n    },\n    genFieldset () {\n      if (!this.outlined) return null\n\n      return this.$createElement('fieldset', {\n        attrs: {\n          'aria-hidden': true,\n        },\n      }, [this.genLegend()])\n    },\n    genLabel () {\n      if (!this.showLabel) return null\n\n      const data = {\n        props: {\n          absolute: true,\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.isDisabled,\n          focused: !this.isSingle && (this.isFocused || !!this.validationState),\n          for: this.computedId,\n          left: this.labelPosition.left,\n          light: this.light,\n          right: this.labelPosition.right,\n          value: this.labelValue,\n        },\n      }\n\n      return this.$createElement(VLabel, data, this.$slots.label || this.label)\n    },\n    genLegend () {\n      const width = !this.singleLine && (this.labelValue || this.isDirty) ? this.labelWidth : 0\n      const span = this.$createElement('span', {\n        domProps: { innerHTML: '&#8203;' },\n        staticClass: 'notranslate',\n      })\n\n      return this.$createElement('legend', {\n        style: {\n          width: !this.isSingle ? convertToUnit(width) : undefined,\n        },\n      }, [span])\n    },\n    genInput () {\n      const listeners = Object.assign({}, this.listeners$)\n      delete listeners.change // Change should not be bound externally\n      const { title, ...inputAttrs } = this.attrs$\n\n      return this.$createElement('input', {\n        style: {},\n        domProps: {\n          value: (this.type === 'number' && Object.is(this.lazyValue, -0)) ? '-0' : this.lazyValue,\n        },\n        attrs: {\n          ...inputAttrs,\n          autofocus: this.autofocus,\n          disabled: this.isDisabled,\n          id: this.computedId,\n          placeholder: this.persistentPlaceholder || this.isFocused || !this.hasLabel ? this.placeholder : undefined,\n          readonly: this.isReadonly,\n          type: this.type,\n        },\n        on: Object.assign(listeners, {\n          blur: this.onBlur,\n          input: this.onInput,\n          focus: this.onFocus,\n          keydown: this.onKeyDown,\n        }),\n        ref: 'input',\n        directives: [{\n          name: 'resize',\n          modifiers: { quiet: true },\n          value: this.onResize,\n        }],\n      })\n    },\n    genMessages () {\n      if (!this.showDetails) return null\n\n      const messagesNode = VInput.options.methods.genMessages.call(this)\n      const counterNode = this.genCounter()\n\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__details',\n      }, [\n        messagesNode,\n        counterNode,\n      ])\n    },\n    genTextFieldSlot () {\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__slot',\n      }, [\n        this.genLabel(),\n        this.prefix ? this.genAffix('prefix') : null,\n        this.genInput(),\n        this.suffix ? this.genAffix('suffix') : null,\n      ])\n    },\n    genAffix (type: 'prefix' | 'suffix') {\n      return this.$createElement('div', {\n        class: `v-text-field__${type}`,\n        ref: type,\n      }, this[type])\n    },\n    onBlur (e?: Event) {\n      this.isFocused = false\n      e && this.$nextTick(() => this.$emit('blur', e))\n    },\n    onClick () {\n      if (this.isFocused || this.isDisabled || !this.$refs.input) return\n\n      this.$refs.input.focus()\n    },\n    onFocus (e?: Event) {\n      if (!this.$refs.input) return\n\n      const root = attachedRoot(this.$el)\n      if (!root) return\n\n      if (root.activeElement !== this.$refs.input) {\n        return this.$refs.input.focus()\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        e && this.$emit('focus', e)\n      }\n    },\n    onInput (e: Event) {\n      const target = e.target as HTMLInputElement\n      this.internalValue = target.value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (\n        e.keyCode === keyCodes.enter &&\n        this.lazyValue !== this.initialValue\n      ) {\n        this.initialValue = this.lazyValue\n        this.$emit('change', this.initialValue)\n      }\n\n      this.$emit('keydown', e)\n    },\n    onMouseDown (e: Event) {\n      // Prevent input from being blurred\n      if (e.target !== this.$refs.input) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n\n      VInput.options.methods.onMouseDown.call(this, e)\n    },\n    onMouseUp (e: Event) {\n      if (this.hasMouseDown) this.focus()\n\n      VInput.options.methods.onMouseUp.call(this, e)\n    },\n    setLabelWidth () {\n      if (!this.outlined) return\n\n      this.labelWidth = this.$refs.label\n        ? Math.min(this.$refs.label.scrollWidth * 0.75 + 6, (this.$el as HTMLElement).offsetWidth - 24)\n        : 0\n    },\n    setPrefixWidth () {\n      if (!this.$refs.prefix) return\n\n      this.prefixWidth = this.$refs.prefix.offsetWidth\n    },\n    setPrependWidth () {\n      if (!this.outlined || !this.$refs['prepend-inner']) return\n\n      this.prependWidth = this.$refs['prepend-inner'].offsetWidth\n    },\n    tryAutofocus () {\n      if (\n        !this.autofocus ||\n        typeof document === 'undefined' ||\n        !this.$refs.input) return false\n\n      const root = attachedRoot(this.$el)\n      if (!root || root.activeElement === this.$refs.input) return false\n\n      this.$refs.input.focus()\n\n      return true\n    },\n    updateValue (val: boolean) {\n      // Sets validationState from validatable\n      this.hasColor = val\n\n      if (val) {\n        this.initialValue = this.lazyValue\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue)\n      }\n    },\n    onResize () {\n      this.setLabelWidth()\n      this.setPrefixWidth()\n      this.setPrependWidth()\n    },\n  },\n})\n","// Styles\nimport './VLabel.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable, { functionalThemeClasses } from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Helpers\nimport { convertToUnit } from '../../util/helpers'\nimport mergeData from '../../util/mergeData'\n\n/* @vue/component */\nexport default mixins(Themeable).extend({\n  name: 'v-label',\n\n  functional: true,\n\n  props: {\n    absolute: Boolean,\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    disabled: Boolean,\n    focused: Boolean,\n    for: String,\n    left: {\n      type: [Number, String],\n      default: 0,\n    },\n    right: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    value: Boolean,\n  },\n\n  render (h, ctx): VNode {\n    const { children, listeners, props, data } = ctx\n    const newData = mergeData({\n      staticClass: 'v-label',\n      class: {\n        'v-label--active': props.value,\n        'v-label--is-disabled': props.disabled,\n        ...functionalThemeClasses(ctx),\n      },\n      attrs: {\n        for: props.for,\n        'aria-hidden': !props.for,\n      },\n      on: listeners,\n      style: {\n        left: convertToUnit(props.left),\n        right: convertToUnit(props.right),\n        position: props.absolute ? 'absolute' : 'relative',\n      },\n      ref: 'label',\n    }, data)\n\n    return h('label', Colorable.options.methods.setTextColor(props.focused && props.color, newData), children)\n  },\n})\n","import VLabel from './VLabel'\n\nexport { VLabel }\nexport default VLabel\n"],"sourceRoot":""}