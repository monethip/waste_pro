{"version":3,"sources":["webpack:///../../../src/components/VMenu/index.ts","webpack:///../../../src/components/VChip/VChip.ts","webpack:///../../../src/components/VChip/index.ts","webpack:///../../../src/components/VCheckbox/VSimpleCheckbox.ts","webpack:///../../../src/components/VDivider/index.ts","webpack:///../../../src/components/VSubheader/VSubheader.ts","webpack:///../../../src/components/VSubheader/index.ts","webpack:///../../../src/components/VSelect/VSelectList.ts","webpack:///../../../src/mixins/comparable/index.ts","webpack:///../../../src/mixins/filterable/index.ts","webpack:///../../../src/components/VSelect/VSelect.ts"],"names":["mixins","name","props","active","type","default","activeClass","this","chipGroup","close","closeIcon","closeLabel","disabled","draggable","filter","filterIcon","label","link","outlined","pill","tag","textColor","value","data","proxyClass","computed","classes","groupClasses","hasClose","Boolean","isClickable","created","breakingProps","original","replacement","methods","click","genFilter","children","$createElement","VIcon","staticClass","left","genClose","right","size","attrs","$vuetify","lang","t","on","e","genContent","$slots","render","tabindex","setBackgroundColor","color","h","setTextColor","functional","directives","ripple","indeterminate","indeterminateIcon","onIcon","offIcon","listeners","icon","dark","light","center","class","f","inset","themeClasses","$listeners","action","dense","hideSelected","items","itemDisabled","String","Array","itemText","itemValue","noDataText","noFilter","searchInput","selectedItems","parsedItems","map","item","tileActiveClass","Object","staticNoDataTile","tile","role","undefined","mousedown","VListItem","genTileContent","genAction","VListItemAction","VSimpleCheckbox","input","genDivider","VDivider","genFilteredText","text","getMaskedCharacters","end","start","genHighlight","middle","genHeader","index","genTile","hasItem","getDisabled","id","_uid","inputValue","$scopedSlots","length","parent","scopedSlot","needsTile","innerHTML","getText","VList","domProps","indexOf","getValue","slot","itemsLength","valueComparator","defaultMenuProps","closeOnClick","closeOnContentClick","disableKeys","openOnClick","maxHeight","baseMixins","ClickOutside","appendIcon","attach","cacheItems","chips","clearable","deletableChips","disableLookup","eager","itemColor","menuProps","multiple","openOnClear","returnObject","smallChips","cachedItems","menuIsBooted","isMenuActive","lastItem","lazyValue","selectedIndex","keyboardLookupPrefix","keyboardLookupLastTime","allItems","filterDuplicates","concat","computedItems","computedOwns","computedCounterValue","counterValue","isFocused","handler","closeConditional","include","dynamicHeight","hasChips","hasSlot","isDirty","listData","scopeId","$vnode","context","select","selectItem","scopedSlots","staticList","console","VSelectList","virtualizedItems","$_menuProps","slice","menuCanShow","normalisedProps","split","acc","p","nudgeBottom","watch","internalValue","window","immediate","blur","activateMenu","clearableCallback","getContent","contains","$el","uniqueValues","arr","val","findExistingIndex","i","$refs","menu","genChipSelection","isDisabled","isInteractive","VChip","small","key","JSON","genCommaSelection","last","genDefaultSlot","selections","prefix","genAffix","suffix","genIcon","VInput","mergeData","genInput","readonly","autocomplete","placeholder","persistentPlaceholder","keypress","onKeyPress","genHiddenInput","attrs$","genInputSlot","genList","genListWithSlot","slots","slotName","genMenu","VMenu","scroll","onScroll","ref","genSelections","genSelection","genSlotSelection","selection","selected","getMenuIndex","onBlur","$emit","onChipInput","setValue","onClick","isAppendInner","onEscDown","KEYBOARD_LOOKUP_THRESHOLD","now","performance","findIndex","Math","setTimeout","onKeyDown","isReadonly","keyCode","onUpDown","onTabDown","onSpaceDown","onMenuActiveChange","onMouseUp","hasMouseDown","showMoreItems","scrollHeight","scrollTop","requestAnimationFrame","activeTile","setMenuIndex","setSelectedItems","values","v","appendInner"],"mappings":"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","file":"js/chunk-279c0e41.5215720e.js","sourcesContent":["import VMenu from './VMenu'\n\nexport { VMenu }\nexport default VMenu\n","// Styles\nimport './VChip.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Components\nimport { VExpandXTransition } from '../transitions'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\nimport { PropValidator, PropType } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Sizeable,\n  Routable,\n  Themeable,\n  GroupableFactory('chipGroup'),\n  ToggleableFactory('inputValue')\n).extend({\n  name: 'v-chip',\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.chipGroup) return ''\n\n        return this.chipGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    close: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$delete',\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close',\n    },\n    disabled: Boolean,\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    outlined: Boolean,\n    pill: Boolean,\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    textColor: String,\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-chip--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-chip': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-chip--clickable': this.isClickable,\n        'v-chip--disabled': this.disabled,\n        'v-chip--draggable': this.draggable,\n        'v-chip--label': this.label,\n        'v-chip--link': this.isLink,\n        'v-chip--no-color': !this.color,\n        'v-chip--outlined': this.outlined,\n        'v-chip--pill': this.pill,\n        'v-chip--removable': this.hasClose,\n        ...this.themeClasses,\n        ...this.sizeableClasses,\n        ...this.groupClasses,\n      }\n    },\n    hasClose (): boolean {\n      return Boolean(this.close)\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.chipGroup\n      )\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['outline', 'outlined'],\n      ['selected', 'input-value'],\n      ['value', 'active'],\n      ['@input', '@active.sync'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      this.$emit('click', e)\n\n      this.chipGroup && this.toggle()\n    },\n    genFilter (): VNode {\n      const children = []\n\n      if (this.isActive) {\n        children.push(\n          this.$createElement(VIcon, {\n            staticClass: 'v-chip__filter',\n            props: { left: true },\n          }, this.filterIcon)\n        )\n      }\n\n      return this.$createElement(VExpandXTransition, children)\n    },\n    genClose (): VNode {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-chip__close',\n        props: {\n          right: true,\n          size: 18,\n        },\n        attrs: {\n          'aria-label': this.$vuetify.lang.t(this.closeLabel),\n        },\n        on: {\n          click: (e: Event) => {\n            e.stopPropagation()\n            e.preventDefault()\n\n            this.$emit('click:close')\n            this.$emit('update:active', false)\n          },\n        },\n      }, this.closeIcon)\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-chip__content',\n      }, [\n        this.filter && this.genFilter(),\n        this.$slots.default,\n        this.hasClose && this.genClose(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genContent()]\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      draggable: this.draggable ? 'true' : undefined,\n      tabindex: this.chipGroup && !this.disabled ? 0 : data.attrs!.tabindex,\n    }\n    data.directives!.push({\n      name: 'show',\n      value: this.active,\n    })\n    data = this.setBackgroundColor(this.color, data)\n\n    const color = this.textColor || (this.outlined && this.color)\n\n    return h(tag, this.setTextColor(color, data), children)\n  },\n})\n","import VChip from './VChip'\n\nexport { VChip }\nexport default VChip\n","import './VSimpleCheckbox.sass'\n\nimport ripple from '../../directives/ripple'\n\nimport Vue, { VNode, VNodeDirective } from 'vue'\nimport { VIcon } from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport { wrapInArray } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'v-simple-checkbox',\n\n  functional: true,\n\n  directives: {\n    ripple,\n  },\n\n  props: {\n    ...Colorable.options.props,\n    ...Themeable.options.props,\n    disabled: Boolean,\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    value: Boolean,\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n  },\n\n  render (h, { props, data, listeners }): VNode {\n    const children = []\n    let icon = props.offIcon\n    if (props.indeterminate) icon = props.indeterminateIcon\n    else if (props.value) icon = props.onIcon\n\n    children.push(h(VIcon, Colorable.options.methods.setTextColor(props.value && props.color, {\n      props: {\n        disabled: props.disabled,\n        dark: props.dark,\n        light: props.light,\n      },\n    }), icon))\n\n    if (props.ripple && !props.disabled) {\n      const ripple = h('div', Colorable.options.methods.setTextColor(props.color, {\n        staticClass: 'v-input--selection-controls__ripple',\n        directives: [{\n          name: 'ripple',\n          value: { center: true },\n        }] as VNodeDirective[],\n      }))\n\n      children.push(ripple)\n    }\n\n    return h('div',\n      mergeData(data, {\n        class: {\n          'v-simple-checkbox': true,\n          'v-simple-checkbox--disabled': props.disabled,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (data.on && data.on.input && !props.disabled) {\n              wrapInArray(data.on.input).forEach(f => f(!props.value))\n            }\n          },\n        },\n      }), [\n        h('div', { staticClass: 'v-input--selection-controls__input' }, children),\n      ])\n  },\n})\n","import VDivider from './VDivider'\n\nexport { VDivider }\nexport default VDivider\n","// Styles\nimport './VSubheader.sass'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nexport default mixins(\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-subheader',\n\n  props: {\n    inset: Boolean,\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-subheader',\n      class: {\n        'v-subheader--inset': this.inset,\n        ...this.themeClasses,\n      },\n      attrs: this.$attrs,\n      on: this.$listeners,\n    }, this.$slots.default)\n  },\n})\n","import VSubheader from './VSubheader'\n\nexport { VSubheader }\nexport default VSubheader\n","// Components\nimport VSimpleCheckbox from '../VCheckbox/VSimpleCheckbox'\nimport VDivider from '../VDivider'\nimport VSubheader from '../VSubheader'\nimport {\n  VList,\n  VListItem,\n  VListItemAction,\n  VListItemContent,\n  VListItemTitle,\n} from '../VList'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Helpers\nimport {\n  escapeHTML,\n  getPropertyFromItem,\n} from '../../util/helpers'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, PropType, VNodeChildren } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { SelectItemKey } from 'vuetify/types'\n\ntype ListTile = { item: any, disabled?: null | boolean, value?: boolean, index: number };\n\n/* @vue/component */\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-select-list',\n\n  // https://github.com/vuejs/vue/issues/6872\n  directives: {\n    ripple,\n  },\n\n  props: {\n    action: Boolean,\n    dense: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n    itemDisabled: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'disabled',\n    },\n    itemText: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'text',\n    },\n    itemValue: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'value',\n    },\n    noDataText: String,\n    noFilter: Boolean,\n    searchInput: null as unknown as PropType<any>,\n    selectedItems: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n  },\n\n  computed: {\n    parsedItems (): any[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    tileActiveClass (): string {\n      return Object.keys(this.setTextColor(this.color).class || {}).join(' ')\n    },\n    staticNoDataTile (): VNode {\n      const tile = {\n        attrs: {\n          role: undefined,\n        },\n        on: {\n          mousedown: (e: Event) => e.preventDefault(), // Prevent onBlur from being called\n        },\n      }\n\n      return this.$createElement(VListItem, tile, [\n        this.genTileContent(this.noDataText),\n      ])\n    },\n  },\n\n  methods: {\n    genAction (item: object, inputValue: any): VNode {\n      return this.$createElement(VListItemAction, [\n        this.$createElement(VSimpleCheckbox, {\n          props: {\n            color: this.color,\n            value: inputValue,\n            ripple: false,\n          },\n          on: {\n            input: () => this.$emit('select', item),\n          },\n        }),\n      ])\n    },\n    genDivider (props: { [key: string]: any }) {\n      return this.$createElement(VDivider, { props })\n    },\n    genFilteredText (text: string) {\n      text = text || ''\n\n      if (!this.searchInput || this.noFilter) return escapeHTML(text)\n\n      const { start, middle, end } = this.getMaskedCharacters(text)\n\n      return `${escapeHTML(start)}${this.genHighlight(middle)}${escapeHTML(end)}`\n    },\n    genHeader (props: { [key: string]: any }): VNode {\n      return this.$createElement(VSubheader, { props }, props.header)\n    },\n    genHighlight (text: string): string {\n      return `<span class=\"v-list-item__mask\">${escapeHTML(text)}</span>`\n    },\n    getMaskedCharacters (text: string): {\n      start: string\n      middle: string\n      end: string\n    } {\n      const searchInput = (this.searchInput || '').toString().toLocaleLowerCase()\n      const index = text.toLocaleLowerCase().indexOf(searchInput)\n\n      if (index < 0) return { start: text, middle: '', end: '' }\n\n      const start = text.slice(0, index)\n      const middle = text.slice(index, index + searchInput.length)\n      const end = text.slice(index + searchInput.length)\n      return { start, middle, end }\n    },\n    genTile ({\n      item,\n      index,\n      disabled = null,\n      value = false,\n    }: ListTile): VNode | VNode[] | undefined {\n      if (!value) value = this.hasItem(item)\n\n      if (item === Object(item)) {\n        disabled = disabled !== null\n          ? disabled\n          : this.getDisabled(item)\n      }\n\n      const tile = {\n        attrs: {\n          // Default behavior in list does not\n          // contain aria-selected by default\n          'aria-selected': String(value),\n          id: `list-item-${this._uid}-${index}`,\n          role: 'option',\n        },\n        on: {\n          mousedown: (e: Event) => {\n            // Prevent onBlur from being called\n            e.preventDefault()\n          },\n          click: () => disabled || this.$emit('select', item),\n        },\n        props: {\n          activeClass: this.tileActiveClass,\n          disabled,\n          ripple: true,\n          inputValue: value,\n        },\n      }\n\n      if (!this.$scopedSlots.item) {\n        return this.$createElement(VListItem, tile, [\n          this.action && !this.hideSelected && this.items.length > 0\n            ? this.genAction(item, value)\n            : null,\n          this.genTileContent(item, index),\n        ])\n      }\n\n      const parent = this\n      const scopedSlot = this.$scopedSlots.item({\n        parent,\n        item,\n        attrs: {\n          ...tile.attrs,\n          ...tile.props,\n        },\n        on: tile.on,\n      })\n\n      return this.needsTile(scopedSlot)\n        ? this.$createElement(VListItem, tile, scopedSlot)\n        : scopedSlot\n    },\n    genTileContent (item: any, index = 0): VNode {\n      const innerHTML = this.genFilteredText(this.getText(item))\n\n      return this.$createElement(VListItemContent,\n        [this.$createElement(VListItemTitle, {\n          domProps: { innerHTML },\n        })]\n      )\n    },\n    hasItem (item: object) {\n      return this.parsedItems.indexOf(this.getValue(item)) > -1\n    },\n    needsTile (slot: VNode[] | undefined) {\n      return slot!.length !== 1 ||\n        slot![0].componentOptions == null ||\n        slot![0].componentOptions.Ctor.options.name !== 'v-list-item'\n    },\n    getDisabled (item: object) {\n      return Boolean(getPropertyFromItem(item, this.itemDisabled, false))\n    },\n    getText (item: object) {\n      return String(getPropertyFromItem(item, this.itemText, item))\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n  },\n\n  render (): VNode {\n    const children: VNodeChildren = []\n    const itemsLength = this.items.length\n    for (let index = 0; index < itemsLength; index++) {\n      const item = this.items[index]\n\n      if (this.hideSelected &&\n        this.hasItem(item)\n      ) continue\n\n      if (item == null) children.push(this.genTile({ item, index }))\n      else if (item.header) children.push(this.genHeader(item))\n      else if (item.divider) children.push(this.genDivider(item))\n      else children.push(this.genTile({ item, index }))\n    }\n\n    children.length || children.push(this.$slots['no-data'] || this.staticNoDataTile)\n\n    this.$slots['prepend-item'] && children.unshift(this.$slots['prepend-item'])\n\n    this.$slots['append-item'] && children.push(this.$slots['append-item'])\n\n    return this.$createElement(VList, {\n      staticClass: 'v-select-list',\n      class: this.themeClasses,\n      attrs: {\n        role: 'listbox',\n        tabindex: -1,\n      },\n      props: { dense: this.dense },\n    }, children)\n  },\n})\n","import Vue from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { deepEqual } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'comparable',\n  props: {\n    valueComparator: {\n      type: Function,\n      default: deepEqual,\n    } as PropValidator<typeof deepEqual>,\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'filterable',\n\n  props: {\n    noDataText: {\n      type: String,\n      default: '$vuetify.noDataText',\n    },\n  },\n})\n","// Styles\nimport '../VTextField/VTextField.sass'\nimport './VSelect.sass'\n\n// Components\nimport VChip from '../VChip'\nimport VMenu from '../VMenu'\nimport VSelectList from './VSelectList'\n\n// Extensions\nimport VInput from '../VInput'\nimport VTextField from '../VTextField/VTextField'\n\n// Mixins\nimport Comparable from '../../mixins/comparable'\nimport Dependent from '../../mixins/dependent'\nimport Filterable from '../../mixins/filterable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport { getPropertyFromItem, getObjectValueByPath, keyCodes } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, VNodeDirective, PropType, VNodeData } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { SelectItemKey } from 'vuetify/types'\n\nexport const defaultMenuProps = {\n  closeOnClick: false,\n  closeOnContentClick: false,\n  disableKeys: true,\n  openOnClick: false,\n  maxHeight: 304,\n}\n\n// Types\nconst baseMixins = mixins(\n  VTextField,\n  Comparable,\n  Dependent,\n  Filterable\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    menu: InstanceType<typeof VMenu>\n    content: HTMLElement\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    'append-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-select',\n\n  directives: {\n    ClickOutside,\n  },\n\n  props: {\n    appendIcon: {\n      type: String,\n      default: '$dropdown',\n    },\n    attach: {\n      type: null as unknown as PropType<string | boolean | Element | VNode>,\n      default: false,\n    },\n    cacheItems: Boolean,\n    chips: Boolean,\n    clearable: Boolean,\n    deletableChips: Boolean,\n    disableLookup: Boolean,\n    eager: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n    itemColor: {\n      type: String,\n      default: 'primary',\n    },\n    itemDisabled: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'disabled',\n    },\n    itemText: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'text',\n    },\n    itemValue: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'value',\n    },\n    menuProps: {\n      type: [String, Array, Object],\n      default: () => defaultMenuProps,\n    },\n    multiple: Boolean,\n    openOnClear: Boolean,\n    returnObject: Boolean,\n    smallChips: Boolean,\n  },\n\n  data () {\n    return {\n      cachedItems: this.cacheItems ? this.items : [],\n      menuIsBooted: false,\n      isMenuActive: false,\n      lastItem: 20,\n      // As long as a value is defined, show it\n      // Otherwise, check if multiple\n      // to determine which default to provide\n      lazyValue: this.value !== undefined\n        ? this.value\n        : this.multiple ? [] : undefined,\n      selectedIndex: -1,\n      selectedItems: [] as any[],\n      keyboardLookupPrefix: '',\n      keyboardLookupLastTime: 0,\n    }\n  },\n\n  computed: {\n    /* All items that the select has */\n    allItems (): object[] {\n      return this.filterDuplicates(this.cachedItems.concat(this.items))\n    },\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-select': true,\n        'v-select--chips': this.hasChips,\n        'v-select--chips--small': this.smallChips,\n        'v-select--is-menu-active': this.isMenuActive,\n        'v-select--is-multi': this.multiple,\n      }\n    },\n    /* Used by other components to overwrite */\n    computedItems (): object[] {\n      return this.allItems\n    },\n    computedOwns (): string {\n      return `list-${this._uid}`\n    },\n    computedCounterValue (): number {\n      const value = this.multiple\n        ? this.selectedItems\n        : (this.getText(this.selectedItems[0]) || '').toString()\n\n      if (typeof this.counterValue === 'function') {\n        return this.counterValue(value)\n      }\n\n      return value.length\n    },\n    directives (): VNodeDirective[] | undefined {\n      return this.isFocused ? [{\n        name: 'click-outside',\n        value: {\n          handler: this.blur,\n          closeConditional: this.closeConditional,\n          include: () => this.getOpenDependentElements(),\n        },\n      }] : undefined\n    },\n    dynamicHeight () {\n      return 'auto'\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n    hasSlot (): boolean {\n      return Boolean(this.hasChips || this.$scopedSlots.selection)\n    },\n    isDirty (): boolean {\n      return this.selectedItems.length > 0\n    },\n    listData (): object {\n      const scopeId = this.$vnode && (this.$vnode.context!.$options as { [key: string]: any })._scopeId\n      const attrs = scopeId ? {\n        [scopeId]: true,\n      } : {}\n\n      return {\n        attrs: {\n          ...attrs,\n          id: this.computedOwns,\n        },\n        props: {\n          action: this.multiple,\n          color: this.itemColor,\n          dense: this.dense,\n          hideSelected: this.hideSelected,\n          items: this.virtualizedItems,\n          itemDisabled: this.itemDisabled,\n          itemText: this.itemText,\n          itemValue: this.itemValue,\n          noDataText: this.$vuetify.lang.t(this.noDataText),\n          selectedItems: this.selectedItems,\n        },\n        on: {\n          select: this.selectItem,\n        },\n        scopedSlots: {\n          item: this.$scopedSlots.item,\n        },\n      }\n    },\n    staticList (): VNode {\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        consoleError('assert: staticList should not be called if slots are used')\n      }\n\n      return this.$createElement(VSelectList, this.listData)\n    },\n    virtualizedItems (): object[] {\n      return (this.$_menuProps as any).auto\n        ? this.computedItems\n        : this.computedItems.slice(0, this.lastItem)\n    },\n    menuCanShow: () => true,\n    $_menuProps (): object {\n      let normalisedProps = typeof this.menuProps === 'string'\n        ? this.menuProps.split(',')\n        : this.menuProps\n\n      if (Array.isArray(normalisedProps)) {\n        normalisedProps = normalisedProps.reduce((acc, p) => {\n          acc[p.trim()] = true\n          return acc\n        }, {})\n      }\n\n      return {\n        ...defaultMenuProps,\n        eager: this.eager,\n        value: this.menuCanShow && this.isMenuActive,\n        nudgeBottom: normalisedProps.offsetY ? 1 : 0, // convert to int\n        ...normalisedProps,\n      }\n    },\n  },\n\n  watch: {\n    internalValue (val) {\n      this.initialValue = val\n      this.setSelectedItems()\n    },\n    isMenuActive (val) {\n      window.setTimeout(() => this.onMenuActiveChange(val))\n    },\n    items: {\n      immediate: true,\n      handler (val) {\n        if (this.cacheItems) {\n          // Breaks vue-test-utils if\n          // this isn't calculated\n          // on the next tick\n          this.$nextTick(() => {\n            this.cachedItems = this.filterDuplicates(this.cachedItems.concat(val))\n          })\n        }\n\n        this.setSelectedItems()\n      },\n    },\n  },\n\n  methods: {\n    /** @public */\n    blur (e?: Event) {\n      VTextField.options.methods.blur.call(this, e)\n      this.isMenuActive = false\n      this.isFocused = false\n      this.selectedIndex = -1\n      this.setMenuIndex(-1)\n    },\n    /** @public */\n    activateMenu () {\n      if (\n        !this.isInteractive ||\n        this.isMenuActive\n      ) return\n\n      this.isMenuActive = true\n    },\n    clearableCallback () {\n      this.setValue(this.multiple ? [] : null)\n      this.setMenuIndex(-1)\n      this.$nextTick(() => this.$refs.input && this.$refs.input.focus())\n\n      if (this.openOnClear) this.isMenuActive = true\n    },\n    closeConditional (e: Event) {\n      if (!this.isMenuActive) return true\n\n      return (\n        !this._isDestroyed &&\n\n        // Click originates from outside the menu content\n        // Multiple selects don't close when an item is clicked\n        (!this.getContent() ||\n        !this.getContent().contains(e.target as Node)) &&\n\n        // Click originates from outside the element\n        this.$el &&\n        !this.$el.contains(e.target as Node) &&\n        e.target !== this.$el\n      )\n    },\n    filterDuplicates (arr: any[]) {\n      const uniqueValues = new Map()\n      for (let index = 0; index < arr.length; ++index) {\n        const item = arr[index]\n\n        // Do not deduplicate headers or dividers (#12517)\n        if (item.header || item.divider) {\n          uniqueValues.set(item, item)\n          continue\n        }\n\n        const val = this.getValue(item)\n\n        // TODO: comparator\n        !uniqueValues.has(val) && uniqueValues.set(val, item)\n      }\n      return Array.from(uniqueValues.values())\n    },\n    findExistingIndex (item: object) {\n      const itemValue = this.getValue(item)\n\n      return (this.internalValue || []).findIndex((i: object) => this.valueComparator(this.getValue(i), itemValue))\n    },\n    getContent () {\n      return this.$refs.menu && this.$refs.menu.$refs.content\n    },\n    genChipSelection (item: object, index: number) {\n      const isDisabled = (\n        this.isDisabled ||\n        this.getDisabled(item)\n      )\n      const isInteractive = !isDisabled && this.isInteractive\n\n      return this.$createElement(VChip, {\n        staticClass: 'v-chip--select',\n        attrs: { tabindex: -1 },\n        props: {\n          close: this.deletableChips && isInteractive,\n          disabled: isDisabled,\n          inputValue: index === this.selectedIndex,\n          small: this.smallChips,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            if (!isInteractive) return\n\n            e.stopPropagation()\n\n            this.selectedIndex = index\n          },\n          'click:close': () => this.onChipInput(item),\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }, this.getText(item))\n    },\n    genCommaSelection (item: object, index: number, last: boolean) {\n      const color = index === this.selectedIndex && this.computedColor\n      const isDisabled = (\n        this.isDisabled ||\n        this.getDisabled(item)\n      )\n\n      return this.$createElement('div', this.setTextColor(color, {\n        staticClass: 'v-select__selection v-select__selection--comma',\n        class: {\n          'v-select__selection--disabled': isDisabled,\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }), `${this.getText(item)}${last ? '' : ', '}`)\n    },\n    genDefaultSlot (): (VNode | VNode[] | null)[] {\n      const selections = this.genSelections()\n      const input = this.genInput()\n\n      // If the return is an empty array\n      // push the input\n      if (Array.isArray(selections)) {\n        selections.push(input)\n      // Otherwise push it into children\n      } else {\n        selections.children = selections.children || []\n        selections.children.push(input)\n      }\n\n      return [\n        this.genFieldset(),\n        this.$createElement('div', {\n          staticClass: 'v-select__slot',\n          directives: this.directives,\n        }, [\n          this.genLabel(),\n          this.prefix ? this.genAffix('prefix') : null,\n          selections,\n          this.suffix ? this.genAffix('suffix') : null,\n          this.genClearIcon(),\n          this.genIconSlot(),\n          this.genHiddenInput(),\n        ]),\n        this.genMenu(),\n        this.genProgress(),\n      ]\n    },\n    genIcon (\n      type: string,\n      cb?: (e: Event) => void,\n      extraData?: VNodeData\n    ) {\n      const icon = VInput.options.methods.genIcon.call(this, type, cb, extraData)\n\n      if (type === 'append') {\n        // Don't allow the dropdown icon to be focused\n        icon.children![0].data = mergeData(icon.children![0].data!, {\n          attrs: {\n            tabindex: icon.children![0].componentOptions!.listeners && '-1',\n            'aria-hidden': 'true',\n            'aria-label': undefined,\n          },\n        })\n      }\n\n      return icon\n    },\n    genInput (): VNode {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n\n      input.data = mergeData(input.data!, {\n        domProps: { value: null },\n        attrs: {\n          readonly: true,\n          type: 'text',\n          'aria-readonly': String(this.isReadonly),\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n          placeholder: (!this.isDirty && (this.persistentPlaceholder || this.isFocused || !this.hasLabel)) ? this.placeholder : undefined,\n        },\n        on: { keypress: this.onKeyPress },\n      })\n\n      return input\n    },\n    genHiddenInput (): VNode {\n      return this.$createElement('input', {\n        domProps: { value: this.lazyValue },\n        attrs: {\n          type: 'hidden',\n          name: this.attrs$.name,\n        },\n      })\n    },\n    genInputSlot (): VNode {\n      const render = VTextField.options.methods.genInputSlot.call(this)\n\n      render.data!.attrs = {\n        ...render.data!.attrs,\n        role: 'button',\n        'aria-haspopup': 'listbox',\n        'aria-expanded': String(this.isMenuActive),\n        'aria-owns': this.computedOwns,\n      }\n\n      return render\n    },\n    genList (): VNode {\n      // If there's no slots, we can use a cached VNode to improve performance\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        return this.genListWithSlot()\n      } else {\n        return this.staticList\n      }\n    },\n    genListWithSlot (): VNode {\n      const slots = ['prepend-item', 'no-data', 'append-item']\n        .filter(slotName => this.$slots[slotName])\n        .map(slotName => this.$createElement('template', {\n          slot: slotName,\n        }, this.$slots[slotName]))\n      // Requires destructuring due to Vue\n      // modifying the `on` property when passed\n      // as a referenced object\n      return this.$createElement(VSelectList, {\n        ...this.listData,\n      }, slots)\n    },\n    genMenu (): VNode {\n      const props = this.$_menuProps as any\n      props.activator = this.$refs['input-slot']\n\n      // Attach to root el so that\n      // menu covers prepend/append icons\n      if (\n        // TODO: make this a computed property or helper or something\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) {\n        props.attach = this.$el\n      } else {\n        props.attach = this.attach\n      }\n\n      return this.$createElement(VMenu, {\n        attrs: { role: undefined },\n        props,\n        on: {\n          input: (val: boolean) => {\n            this.isMenuActive = val\n            this.isFocused = val\n          },\n          scroll: this.onScroll,\n        },\n        ref: 'menu',\n      }, [this.genList()])\n    },\n    genSelections (): VNode {\n      let length = this.selectedItems.length\n      const children = new Array(length)\n\n      let genSelection\n      if (this.$scopedSlots.selection) {\n        genSelection = this.genSlotSelection\n      } else if (this.hasChips) {\n        genSelection = this.genChipSelection\n      } else {\n        genSelection = this.genCommaSelection\n      }\n\n      while (length--) {\n        children[length] = genSelection(\n          this.selectedItems[length],\n          length,\n          length === children.length - 1\n        )\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-select__selections',\n      }, children)\n    },\n    genSlotSelection (item: object, index: number): VNode[] | undefined {\n      return this.$scopedSlots.selection!({\n        attrs: {\n          class: 'v-chip--select',\n        },\n        parent: this,\n        item,\n        index,\n        select: (e: Event) => {\n          e.stopPropagation()\n          this.selectedIndex = index\n        },\n        selected: index === this.selectedIndex,\n        disabled: !this.isInteractive,\n      })\n    },\n    getMenuIndex () {\n      return this.$refs.menu ? (this.$refs.menu as { [key: string]: any }).listIndex : -1\n    },\n    getDisabled (item: object) {\n      return getPropertyFromItem(item, this.itemDisabled, false)\n    },\n    getText (item: object) {\n      return getPropertyFromItem(item, this.itemText, item)\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n    onBlur (e?: Event) {\n      e && this.$emit('blur', e)\n    },\n    onChipInput (item: object) {\n      if (this.multiple) this.selectItem(item)\n      else this.setValue(null)\n      // If all items have been deleted,\n      // open `v-menu`\n      if (this.selectedItems.length === 0) {\n        this.isMenuActive = true\n      } else {\n        this.isMenuActive = false\n      }\n      this.selectedIndex = -1\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      if (!this.isAppendInner(e.target)) {\n        this.isMenuActive = true\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        this.$emit('focus')\n      }\n\n      this.$emit('click', e)\n    },\n    onEscDown (e: Event) {\n      e.preventDefault()\n      if (this.isMenuActive) {\n        e.stopPropagation()\n        this.isMenuActive = false\n      }\n    },\n    onKeyPress (e: KeyboardEvent) {\n      if (\n        this.multiple ||\n        !this.isInteractive ||\n        this.disableLookup\n      ) return\n\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n      const now = performance.now()\n      if (now - this.keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        this.keyboardLookupPrefix = ''\n      }\n      this.keyboardLookupPrefix += e.key.toLowerCase()\n      this.keyboardLookupLastTime = now\n\n      const index = this.allItems.findIndex(item => {\n        const text = (this.getText(item) || '').toString()\n\n        return text.toLowerCase().startsWith(this.keyboardLookupPrefix)\n      })\n      const item = this.allItems[index]\n      if (index !== -1) {\n        this.lastItem = Math.max(this.lastItem, index + 5)\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.$nextTick(() => this.$refs.menu.getTiles())\n        setTimeout(() => this.setMenuIndex(index))\n      }\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (this.isReadonly && e.keyCode !== keyCodes.tab) return\n\n      const keyCode = e.keyCode\n      const menu = this.$refs.menu\n\n      this.$emit('keydown', e)\n\n      if (!menu) return\n\n      // If menu is active, allow default\n      // listIndex change from menu\n      if (this.isMenuActive && keyCode !== keyCodes.tab) {\n        this.$nextTick(() => {\n          menu.changeListIndex(e)\n          this.$emit('update:list-index', menu.listIndex)\n        })\n      }\n\n      // If enter, space, open menu\n      if ([\n        keyCodes.enter,\n        keyCodes.space,\n      ].includes(keyCode)) this.activateMenu()\n\n      // If menu is not active, up/down/home/end can do\n      // one of 2 things. If multiple, opens the\n      // menu, if not, will cycle through all\n      // available options\n      if (\n        !this.isMenuActive &&\n        [keyCodes.up, keyCodes.down, keyCodes.home, keyCodes.end].includes(keyCode)\n      ) return this.onUpDown(e)\n\n      // If escape deactivate the menu\n      if (keyCode === keyCodes.esc) return this.onEscDown(e)\n\n      // If tab - select item or close menu\n      if (keyCode === keyCodes.tab) return this.onTabDown(e)\n\n      // If space preventDefault\n      if (keyCode === keyCodes.space) return this.onSpaceDown(e)\n    },\n    onMenuActiveChange (val: boolean) {\n      // If menu is closing and mulitple\n      // or menuIndex is already set\n      // skip menu index recalculation\n      if (\n        (this.multiple && !val) ||\n        this.getMenuIndex() > -1\n      ) return\n\n      const menu = this.$refs.menu\n\n      if (!menu || !this.isDirty) return\n\n      // When menu opens, set index of first active item\n      this.$refs.menu.getTiles()\n      for (let i = 0; i < menu.tiles.length; i++) {\n        if (menu.tiles[i].getAttribute('aria-selected') === 'true') {\n          this.setMenuIndex(i)\n          break\n        }\n      }\n    },\n    onMouseUp (e: MouseEvent) {\n      // eslint-disable-next-line sonarjs/no-collapsible-if\n      if (\n        this.hasMouseDown &&\n        e.which !== 3 &&\n        this.isInteractive\n      ) {\n        // If append inner is present\n        // and the target is itself\n        // or inside, toggle menu\n        if (this.isAppendInner(e.target)) {\n          this.$nextTick(() => (this.isMenuActive = !this.isMenuActive))\n        }\n      }\n\n      VTextField.options.methods.onMouseUp.call(this, e)\n    },\n    onScroll () {\n      if (!this.isMenuActive) {\n        requestAnimationFrame(() => (this.getContent().scrollTop = 0))\n      } else {\n        if (this.lastItem > this.computedItems.length) return\n\n        const showMoreItems = (\n          this.getContent().scrollHeight -\n          (this.getContent().scrollTop +\n          this.getContent().clientHeight)\n        ) < 200\n\n        if (showMoreItems) {\n          this.lastItem += 20\n        }\n      }\n    },\n    onSpaceDown (e: KeyboardEvent) {\n      e.preventDefault()\n    },\n    onTabDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      const activeTile = menu.activeTile\n\n      // An item that is selected by\n      // menu-index should toggled\n      if (\n        !this.multiple &&\n        activeTile &&\n        this.isMenuActive\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        activeTile.click()\n      } else {\n        // If we make it here,\n        // the user has no selected indexes\n        // and is probably tabbing out\n        this.blur(e)\n      }\n    },\n    onUpDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      e.preventDefault()\n\n      // Multiple selects do not cycle their value\n      // when pressing up or down, instead activate\n      // the menu\n      if (this.multiple) return this.activateMenu()\n\n      const keyCode = e.keyCode\n\n      // Cycle through available values to achieve\n      // select native behavior\n      menu.isBooted = true\n\n      window.requestAnimationFrame(() => {\n        menu.getTiles()\n\n        if (!menu.hasClickableTiles) return this.activateMenu()\n\n        switch (keyCode) {\n          case keyCodes.up:\n            menu.prevTile()\n            break\n          case keyCodes.down:\n            menu.nextTile()\n            break\n          case keyCodes.home:\n            menu.firstTile()\n            break\n          case keyCodes.end:\n            menu.lastTile()\n            break\n        }\n        this.selectItem(this.allItems[this.getMenuIndex()])\n      })\n    },\n    selectItem (item: object) {\n      if (!this.multiple) {\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.isMenuActive = false\n      } else {\n        const internalValue = (this.internalValue || []).slice()\n        const i = this.findExistingIndex(item)\n\n        i !== -1 ? internalValue.splice(i, 1) : internalValue.push(item)\n        this.setValue(internalValue.map((i: object) => {\n          return this.returnObject ? i : this.getValue(i)\n        }))\n\n        // When selecting multiple\n        // adjust menu after each\n        // selection\n        this.$nextTick(() => {\n          this.$refs.menu &&\n            (this.$refs.menu as { [key: string]: any }).updateDimensions()\n        })\n\n        // There is no item to re-highlight\n        // when selections are hidden\n        if (this.hideSelected) {\n          this.setMenuIndex(-1)\n        } else {\n          const index = this.allItems.indexOf(item)\n          if (~index) {\n            this.$nextTick(() => this.$refs.menu.getTiles())\n            setTimeout(() => this.setMenuIndex(index))\n          }\n        }\n      }\n    },\n    setMenuIndex (index: number) {\n      this.$refs.menu && ((this.$refs.menu as { [key: string]: any }).listIndex = index)\n    },\n    setSelectedItems () {\n      const selectedItems = []\n      const values = !this.multiple || !Array.isArray(this.internalValue)\n        ? [this.internalValue]\n        : this.internalValue\n\n      for (const value of values) {\n        const index = this.allItems.findIndex(v => this.valueComparator(\n          this.getValue(v),\n          this.getValue(value)\n        ))\n\n        if (index > -1) {\n          selectedItems.push(this.allItems[index])\n        }\n      }\n\n      this.selectedItems = selectedItems\n    },\n    setValue (value: any) {\n      if (!this.valueComparator(value, this.internalValue)) {\n        this.internalValue = value\n        this.$emit('change', value)\n      }\n    },\n    isAppendInner (target: any) {\n      // return true if append inner is present\n      // and the target is itself or inside\n      const appendInner = this.$refs['append-inner']\n\n      return appendInner && (appendInner === target || appendInner.contains(target))\n    },\n  },\n})\n"],"sourceRoot":""}