{"version":3,"sources":["webpack:///./src/assets/pin1.svg","webpack:///../../../src/components/VForm/VForm.ts","webpack:///../../../src/components/VBtn/index.ts","webpack:///../../../src/components/VAutocomplete/VAutocomplete.ts","webpack:///../../../src/components/VTimePicker/SelectingTimes.ts","webpack:///../../../src/components/VTimePicker/VTimePickerTitle.ts","webpack:///../../../src/components/VTimePicker/VTimePickerClock.ts","webpack:///../../../src/components/VTimePicker/VTimePicker.ts"],"names":["module","exports","name","provide","form","this","inheritAttrs","props","disabled","lazyValidation","readonly","value","Boolean","data","inputs","watchers","errorBag","watch","handler","errors","Object","deep","immediate","methods","watchInput","watcher","input","val","_uid","valid","shouldValidate","validate","filter","reset","resetErrorBag","setTimeout","resetValidation","register","unregister","found","find","i","unwatch","render","h","staticClass","attrs","novalidate","attrs$","on","submit","e","$slots","defaultMenuProps","offsetY","offsetOverflow","transition","allowOverflow","type","default","autoSelectFirst","itemText","queryText","hideNoData","menuProps","noFilter","searchInput","String","lazySearch","computed","classes","selectedIndex","computedItems","selectedValues","selectedItems","map","item","hasDisplayedItems","hideSelected","filteredItems","some","length","currentRange","selectedItem","getText","internalSearch","allItems","text","get","set","isAnyValueAllowed","isDirty","searchIsDirty","isSearching","multiple","menuCanShow","$_menuProps","listData","items","internalValue","isFocused","document","$refs","isMenuActive","oldVal","activateMenu","created","destroyed","onFilteredItemsChanged","onInternalSearchChanged","updateMenuDimensions","menu","changeSelectedIndex","keyCode","deleteCurrentItem","curIndex","curItem","getDisabled","lastIndex","nextIndex","nextItem","clearableCallback","genInput","autocomplete","domProps","genInputSlot","slot","genSelections","hasSlot","onClick","isAppendInner","onInput","target","onKeyDown","onSpaceDown","onTabDown","onUpDown","selectItem","setSelectedItems","setSearch","updateSelf","valueComparator","getValue","hasItem","indexOf","onCopy","currentItem","currentItemText","event","SelectingTimes","mixins","ampm","ampmReadonly","hour","minute","second","period","validator","useSeconds","selecting","Number","genTime","displayedHour","pad","displayedMinute","titleContent","genPickerButton","$createElement","displayedSecond","class","genAmPm","$vuetify","lang","t","children","allowedValues","double","format","max","required","min","scrollable","rotate","step","inputValue","isDragging","valueOnMouseDown","valueOnMouseUp","count","degreesPerUnit","degrees","Math","displayedValue","innerRadiusScale","roundCount","wheel","delta","isAllowed","isInner","handScale","genValues","color","setBackgroundColor","style","getTransform","innerHTML","genHand","scale","angle","transform","getPosition","y","left","x","top","rotateRadians","onMouseDown","onMouseUp","onDragMove","clock","innerClock","innerWidth","width","clientY","center","coords","clientX","handAngle","insideClick","euclidean","checksCount","angleToValue","setMouseDownValue","update","dx","p1","p0","dy","themeClasses","mousedown","mouseup","mouseleave","touchstart","touchend","mousemove","touchmove","ref","rangeHours24","rangeHours12am","rangeHours12pm","v","range60","selectingNames","1","2","3","allowedHours","Function","allowedMinutes","allowedSeconds","includes","ampmInTitle","inputHour","inputMinute","inputSecond","lazyInputHour","lazyInputMinute","lazyInputSecond","Hour","selectingHour","selectingMinute","selectingSecond","isAllowedHourCb","cb","minHour","split","maxHour","isAllowedMinuteCb","isHourAllowed","minTime","minMinute","maxTime","maxMinute","time","isAllowedSecondCb","isMinuteAllowed","minSecond","maxSecond","isAmPm","mounted","genValue","emitValue","$emit","setPeriod","newHour","firstAllowed","setInputData","Array","convert12to24","parseInt","convert24to12","onChange","emitChange","allowedFn","range","first","genClock","dark","light","size","change","genClockAmPm","setTextColor","genPickerBody","key","genPickerTitle","genPicker"],"mappings":"uJAAAA,EAAOC,QAAU,IAA0B,yB,sJCoB5B,sBAAO,EAAD,KAEnB,eAAmB,SAFN,OAIN,CACPC,KADO,SAGPC,QAHO,WAIL,MAAO,CAAEC,KAAMC,OAGjBC,cAPO,EASPC,MAAO,CACLC,SADK,QAELC,eAFK,QAGLC,SAHK,QAILC,MAAOC,SAGTC,KAAM,iBAAO,CACXC,OADW,GAEXC,SAFW,GAGXC,SAAU,KAGZC,MAAO,CACLD,SAAU,CACRE,QADQ,SACD,GACL,IAAMC,EAASC,OAAA,oBAAf,GAEAf,KAAA,mBAEFgB,MANQ,EAORC,WAAW,IAIfC,QAAS,CACPC,WADO,SACG,GAAY,WACdC,EAAW,SAAAC,GACf,OAAOA,EAAA,mBAA0B,SAAAC,GAC/B,OAAU,EAAV,SAAyBD,EAAzB,UACC,CAAEJ,WAAW,KAGZP,EAAqB,CACzBa,KAAMF,EADmB,KAEzBG,MAAO,aACPC,eAAgB,cAiBlB,OAdIzB,KAAJ,eAEEU,EAAA,eAA0BW,EAAA,yBAAgC,SAAAC,GACxD,IAGI,0BAA6BD,EAAjC,QAEAX,EAAA,MAAiBU,EAAjB,QAGFV,EAAA,MAAiBU,EAAjB,GAGF,GAGFM,SA/BO,WAgCL,WAAO1B,KAAKS,OAAOkB,QAAO,SAAAN,GAAK,OAAKA,EAAA,UAA7B,cAGTO,MAnCO,WAoCL5B,KAAA,gBAAoB,SAAAqB,GAAK,OAAIA,EAA7B,WACArB,KAAA,iBAEF6B,cAvCO,WAuCM,WACP7B,KAAJ,gBAEE8B,YAAW,WACT,gBADF,IAMJC,gBAhDO,WAiDL/B,KAAA,gBAAoB,SAAAqB,GAAK,OAAIA,EAA7B,qBACArB,KAAA,iBAEFgC,SApDO,SAoDC,GACNhC,KAAA,eACAA,KAAA,cAAmBA,KAAKmB,WAAxB,KAEFc,WAxDO,SAwDG,GACR,IAAMC,EAAQlC,KAAKS,OAAO0B,MAAK,SAAAC,GAAC,OAAIA,EAAA,OAAWf,EAA/C,QAEA,MAEA,IAAMgB,EAAUrC,KAAKU,SAASyB,MAAK,SAAAC,GAAC,OAAIA,EAAA,OAAWF,EAAnD,QACA,IACEG,EAAA,QACAA,EAAA,kBAGFrC,KAAA,SAAgBA,KAAKU,SAASiB,QAAO,SAAAS,GAAC,OAAIA,EAAA,OAAWF,EAArD,QACAlC,KAAA,OAAcA,KAAKS,OAAOkB,QAAO,SAAAS,GAAC,OAAIA,EAAA,OAAWF,EAAjD,QACAlC,KAAA,QAAaA,KAAb,SAA4BkC,EAA5B,SAIJI,OA3GO,SA2GD,GAAG,WACP,OAAOC,EAAE,OAAQ,CACfC,YADe,SAEfC,MAAO,gBACLC,YADK,GAEF1C,KAAK2C,QAEVC,GAAI,CACFC,OAAS,SAAAC,GAAD,OAAc,uBAEvB9C,KAAK+C,OATR,a,kCCpIJ,gBAGA,e,0KCgBMC,EAAmB,yCAAH,IAEpBC,SAFuB,EAGvBC,gBAHuB,EAIvBC,YAAY,IAIC,qBAAe,CAC5BtD,KAD4B,iBAG5BK,MAAO,CACLkD,cAAe,CACbC,KADa,QAEbC,SAAS,GAEXC,gBAAiB,CACfF,KADe,QAEfC,SAAS,GAEX3B,OAAQ,CACN0B,KADM,SAENC,QAAS,gBACP,OAAOE,EAAA,4BAAqCC,EAArC,sBAAP,IAGJC,WAfK,QAgBLC,UAAW,CACTN,KAAM,+BADG,KAETC,QAAS,kBAAMN,IAEjBY,SApBK,QAqBLC,YAAa,CACXR,KAAMS,SAIVtD,KA7B4B,WA8B1B,MAAO,CACLuD,WAAY/D,KAAK6D,cAIrBG,SAAU,CACRC,QADQ,WAEN,wCACK,qCADE,OAAP,IAEE,kBAFK,EAGL,qCAAsCjE,KAAKkE,eAAiB,KAGhEC,cARQ,WASN,OAAOnE,KAAP,eAEFoE,eAXQ,WAWM,WACZ,OAAOpE,KAAKqE,cAAcC,KAAI,SAAAC,GAAI,OAAI,WAAtC,OAEFC,kBAdQ,WAcS,WACf,OAAOxE,KAAKyE,aACRzE,KAAK0E,cAAcC,MAAK,SAAAJ,GAAI,OAAK,UAD9B,MAEHvE,KAAK0E,cAAcE,OAFvB,GAIFC,aAnBQ,WAoBN,aAAI7E,KAAK8E,aAA6B,EAE/BhB,OAAO9D,KAAK+E,QAAQ/E,KAApB,eAAP,QAEF0E,cAxBQ,WAwBK,WACX,OAAK1E,KAAD,aAAqBA,KAArB,UAAJ,MAA0CA,KAAKgF,eAA+BhF,KAAP,SAEhEA,KAAKiF,SAAStD,QAAO,SAAA4C,GAC1B,IAAMjE,EAAQ,eAAoBiE,EAAM,EAAxC,UACMW,EAAO,MAAA5E,EAAgBwD,OAAhBxD,GAAb,GAEA,OAAO,WAAkBwD,OAAO,EAAzB,gBAAP,OAGJkB,eAAgB,CACdG,IADc,WAEZ,OAAOnF,KAAP,YAEFoF,IAJc,SAIX,GAGGpF,KAAK+D,aAAT,IACE/D,KAAA,aACAA,KAAA,kCAINqF,kBA/CQ,WAgDN,UAEFC,QAlDQ,WAmDN,OAAOtF,KAAKuF,eAAiBvF,KAAKqE,cAAcO,OAAhD,GAEFY,YArDQ,WAsDN,OACExF,KAAKyF,UACLzF,KAFK,eAILA,KAAKuF,eACLvF,KAAKgF,iBAAmBhF,KAAK+E,QAAQ/E,KALvC,eAQF0F,YA9DQ,WA+DN,QAAK1F,KAAL,YAEOA,KAAKwE,oBAAsBxE,KAAlC,aAEF2F,YAnEQ,WAoEN,IAAMzF,EAAQ,yCAAd,MAEA,OADCA,EAAA,aAA6B,kCAA4BA,EAAA,cAA5B,IAA7B,OACD,iCAAO,GAEFA,IAGPqF,cA3EQ,WA4EN,OAA8B,MAAvBvF,KAAKgF,gBAAZ,KACEhF,KAAKgF,gBAETF,aA/EQ,WA+EI,WACV,OAAI9E,KAAJ,SAA0B,KAEnBA,KAAKqE,cAAclC,MAAK,SAAAC,GAC7B,OAAO,kBAAqB,WAArB,GAAuC,WAAc,EAA5D,oBAGJwD,SAtFQ,WAuFN,IAAMpF,EAAO,sCAAb,MAaA,OAXAA,EAAA,uCACKA,EADQ,OAAb,IAEEqF,MAAO7F,KAFI,iBAGX4D,SACE5D,KAAK4D,WACJ5D,KADD,cAECA,KAAK0E,cANG,OAQXb,YAAa7D,KAAKgF,iBAGpB,IAIJpE,MAAO,CACL8D,cADK,yBAELoB,cAFK,YAGLC,UAHK,SAGI,GACP,GACEC,SAAA,wBAAkChG,KAAlC,QACAA,KAAA,aAAoBA,KAAKiG,MAAM5E,MAA/B,WAEA2E,SAAA,2BAAqChG,KAArC,QACAA,KAAA,OACAA,KAAA,eAGJkG,aAbK,SAaO,IACN5E,GAAQtB,KAAZ,UAEAA,KAAA,kBAEF6F,MAlBK,SAkBA,KAOCM,GAAUA,EAAZ,SACAnG,KADA,aAEAA,KAFA,WAGCA,KAHD,eAIAsB,EALF,QAMEtB,KAAKoG,gBAETvC,YAhCK,SAgCM,GACT7D,KAAA,cAEFgF,eAnCK,0BAoCLxB,SAAU,cAGZ6C,QAlL4B,WAmL1BrG,KAAA,aAGFsG,UAtL4B,WAuL1BN,SAAA,2BAAqChG,KAArC,SAGFkB,QAAS,CACPqF,uBADO,SACe,KAA+B,WAG/CjF,IAAJ,IAEAtB,KAAA,iBAEAA,KAAA,WAAe,WAEV,EAAD,iBACC,IAAAsB,EAAA,QACE,EAHL,mBAMA,wBACA,wBAGJkF,wBAnBO,WAoBLxG,KAAA,wBAEFyG,qBAtBO,WAwBLzG,KAAA,cAAqBA,KAAKiG,MAA1B,MAAwCjG,KAAKiG,MAAMS,KAAnD,oBAEFC,oBA1BO,SA0BY,GAGb3G,KAAJ,gBAEIA,KAAKyF,UAAYmB,IAAY,OAAjC,MACE,IAAI5G,KAAKkE,cACPlE,KAAA,cAAqBA,KAAKqE,cAAcO,OAAxC,EAEA5E,KAAA,gBAEOA,KAAKyF,UAAYmB,IAAY,OAAjC,MACD5G,KAAKkE,eAAiBlE,KAAKqE,cAAcO,OAA7C,EACE5E,KAAA,iBAEAA,KAAA,gBAEO4G,IAAY,OAAZ,WAAkCA,IAAY,OAAlD,QACL5G,KAAA,sBAGJ6G,kBA/CO,WAgDL,IAAMC,EAAW9G,KAAjB,cACM+G,EAAU/G,KAAKqE,cAFN,GAKf,GACGrE,KAAD,gBACAA,KAAKgH,YAFP,IAKA,IAAMC,EAAYjH,KAAKqE,cAAcO,OAVtB,EAcf,IACE,IAAA5E,KAAKkE,eADP,IAEE+C,EAFF,CASA,IAAMrC,EAAS5E,KAAKqE,cAApB,OACM6C,EAAYJ,IAAalC,EAAb,EAAAkC,EAEdA,EAFJ,EAGMK,EAAWnH,KAAKqE,cAAtB,GAEA,EAGErE,KAAA,cAFAA,KAAA,SAAcA,KAAKyF,SAAW,GAA9B,MAKFzF,KAAA,qBAjBEA,KAAA,kBAmBJoH,kBApFO,WAqFLpH,KAAA,oBAEA,qDAEFqH,SAzFO,WA0FL,IAAMhG,EAAQ,qCAAd,MAUA,OARAA,EAAA,KAAa,eAAUA,EAAD,KAAc,CAClCoB,MAAO,CACL,wBAAyB,eAAqBzC,KAAKiG,MAAN,KADxC,iBAELqB,aAAc,eAAqBjG,EAAD,kCAEpCkG,SAAU,CAAEjH,MAAON,KAAKgF,kBAG1B,GAEFwC,aAtGO,WAuGL,IAAMC,EAAO,yCAAb,MAIA,OAFAA,EAAA,2BAEA,GAEFC,cA7GO,WA8GL,OAAO1H,KAAK2H,SAAW3H,KAAhB,SACH,0CADGA,MAAP,IAIF4H,QAlHO,SAkHA,GACA5H,KAAL,gBAEAA,KAAA,iBACKA,KAAKkE,eADV,EAEIlE,KAFJ,UAIKA,KAAK6H,cAAc/E,EAAxB,SAAmC9C,KAAKoG,iBAE1C0B,QA3HO,SA2HA,GACL,KACE9H,KAAKkE,eAAL,IACCpB,EAFH,QAKA,IAAMiF,EAASjF,EAAf,OACMxC,EAAQyH,EAPC,MAUXA,EAAJ,OAAkB/H,KAAKoG,eAEvBpG,KAAA,iBACAA,KAAA,SAAgB+H,EAAA,UAAmBA,EAAA,SAAnC,WAEFC,UA1IO,SA0IE,GACP,IAAMpB,EAAU9D,EAAhB,SAGEA,EAAA,SACC,CAAC,OAAD,KAAgB,OAAhB,cAFH,IAIE,8CAOF9C,KAAA,wBAEFiI,YA1JO,SA0JI,KACXC,UA3JO,SA2JE,GACP,8CACAlI,KAAA,cAEFmI,SA/JO,SA+JC,GAENrF,EAFgB,iBAOhB9C,KAAA,gBAEFoI,WAxKO,SAwKG,GACR,+CACApI,KAAA,aAEFqI,iBA5KO,WA6KL,6CADc,MAKTrI,KAAL,WAAqBA,KAAKsI,aAE5BA,UAnLO,WAmLE,WAGPtI,KAAA,WAAe,WAEV,EAAD,UACC,EADD,gBAEC,EAHH,eAKE,kBACG,gBAAD,QACA,EADA,UAEA,EAHoB,aAMlB,UAAa,EANjB,mBAUNuI,WAtMO,YAwMFvI,KAAD,eACCA,KAFH,iBAMGA,KAAD,UACCA,KAAKwI,gBACJxI,KADD,eAECA,KAAKyI,SAASzI,KAJlB,iBAOEA,KAAA,cAGJ0I,QAtNO,SAsNA,GACL,OAAO1I,KAAKoE,eAAeuE,QAAQ3I,KAAKyI,SAAjC,KAAP,GAEFG,OAzNO,SAyND,GAAuB,QAC3B,QAAI5I,KAAKkE,cAAT,CAEA,IAAM2E,EAAc7I,KAAKqE,cAAcrE,KAAvC,eACM8I,EAAkB9I,KAAK+E,QAA7B,GACA,SAAAgE,EAAA,0CACA,SAAAA,EAAA,wEACAA,EAAA,uB,sCCrbN,E,iKAAA,YACE,sBACA,0BACA,2BAHF,CAAKC,MAAL,KCYe,aAAAC,EAAA,MACb,QADa,OAGN,CACPpJ,KADO,sBAGPK,MAAO,CACLgJ,KADK,QAELC,aAFK,QAGLhJ,SAHK,QAILiJ,KAJK,OAKLC,OALK,OAMLC,OANK,OAOLC,OAAQ,CACNlG,KADM,OAENmG,UAAW,SAAAD,GAAM,MAAI,OAAAA,GAA8B,OAAXA,IAE1ClJ,SAXK,QAYLoJ,WAZK,QAaLC,UAAWC,QAGbzI,QAAS,CACP0I,QADO,WAEL,IAAIR,EAAOpJ,KAAX,KACIA,KAAJ,OACEoJ,EAAOA,GAASA,EAAD,MAAJ,EAAX,IAGF,IAAMS,EAA6B,MAAb7J,KAAKoJ,KAAe,KAAOpJ,KAAKkJ,KAAOpF,OAAZ,GAA2B,OAAAgG,EAAA,MAA5E,GACMC,EAAiC,MAAf/J,KAAKqJ,OAAiB,KAAO,OAAAS,EAAA,MAAI9J,KAAzD,QACMgK,EAAe,CACnBhK,KAAKiK,gBAAgB,YAAajB,EAAlC,OAAsEhJ,KADnD,UAEnBA,KAAKkK,eAAe,OAFD,KAGnBlK,KAAKiK,gBAAgB,YAAajB,EAAlC,SAA0EhJ,KAH5E,WAMA,GAAIA,KAAJ,WAAqB,CACnB,IAAMmK,EAAiC,MAAfnK,KAAKsJ,OAAiB,KAAO,OAAAQ,EAAA,MAAI9J,KAAzD,QACAgK,EAAA,KAAkBhK,KAAKkK,eAAe,OAAtC,MACAF,EAAA,KAAkBhK,KAAKiK,gBAAgB,YAAajB,EAAlC,SAA0EhJ,KAA5F,WAEF,OAAOA,KAAKkK,eAAe,MAAO,CAChCE,MAAO,6BADT,IAIFC,QAxBO,WAyBL,OAAOrK,KAAKkK,eAAe,MAAO,CAChC1H,YADgC,4BAEhC4H,MAAO,CACL,sCAAuCpK,KAAKmJ,eAE7C,CACCnJ,KAAD,cAAD,OAAuBA,KAAKuJ,OAD3B,KAC8CvJ,KAAKiK,gBAAgB,SAAU,KAAMjK,KAAKsK,SAASC,KAAKC,EAAxD,0BAAqFxK,KAAKG,UAAYH,KAArJ,UACEA,KAAD,cAAD,OAAuBA,KAAKuJ,OAP9B,KAOiDvJ,KAAKiK,gBAAgB,SAAU,KAAMjK,KAAKsK,SAASC,KAAKC,EAAxD,0BAAqFxK,KAAKG,UAAYH,KAArJ,cAKNsC,OAxDO,SAwDD,GACJ,IAAMmI,EAAW,CAACzK,KAAlB,WAIA,OAFAA,KAAA,MAAayK,EAAA,KAAczK,KAA3B,WAEOuC,EAAE,MAAO,CACdC,YAAa,uBADf,M,0DCrDW,SAAAyG,EAAA,MAAM,OASnB,QATa,OAWN,CACPpJ,KADO,sBAGPK,MAAO,CACLwK,cADK,SAELxB,KAFK,QAGL/I,SAHK,QAILwK,OAJK,QAKLC,OAAQ,CACNvH,KADM,SAENC,QAAU,SAAAhC,GAAD,OAA0BA,IAErCuJ,IAAK,CACHxH,KADG,OAEHyH,UAAU,GAEZC,IAAK,CACH1H,KADG,OAEHyH,UAAU,GAEZE,WAjBK,QAkBL3K,SAlBK,QAmBL4K,OAAQ,CACN5H,KADM,OAENC,QAAS,GAEX4H,KAAM,CACJ7H,KADI,OAEJC,QAAS,GAEXhD,MAAOqJ,QAGTnJ,KAjCO,WAkCL,MAAO,CACL2K,WAAYnL,KADP,MAELoL,YAFK,EAGLC,iBAHK,KAILC,eAAgB,OAIpBtH,SAAU,CACRuH,MADQ,WAEN,OAAOvL,KAAK6K,IAAM7K,KAAX,IAAP,GAEFwL,eAJQ,WAKN,OAAO,IAAMxL,KAAb,YAEFyL,QAPQ,WAQN,OAAOzL,KAAKwL,eAAiBE,KAAtB,GAAP,KAEFC,eAVQ,WAWN,OAAqB,MAAd3L,KAAKM,MAAgBN,KAArB,IAAgCA,KAAvC,OAEF4L,iBAbQ,WAcN,WAEFC,WAhBQ,WAiBN,OAAO7L,KAAK2K,OAAU3K,KAAKuL,MAApB,EAAiCvL,KAAxC,QAIJY,MAAO,CACLN,MADK,SACA,GACHN,KAAA,eAIJkB,QAAS,CACP4K,MADO,SACF,GACHhJ,EAAA,iBAEA,IAAMiJ,EAAQL,KAAA,MAAW5I,EAAD,QAAxB,GACIxC,EAAQN,KAAZ,eACA,GACEM,GAAA,EACAA,GAASA,EAAQN,KAAR,IAAmBA,KAApB,OAAkCA,KAAlC,MAA+CA,KAAvD,WACQA,KAAKgM,UAAN,IAA0B1L,IAAUN,KAH7C,gBAKIM,IAAUN,KAAd,gBACEA,KAAA,WAGJiM,QAfO,SAeA,GACL,OAAOjM,KAAK2K,QAAWrK,EAAQN,KAAR,KAAoBA,KAA3C,YAEFkM,UAlBO,SAkBE,GACP,OAAOlM,KAAKiM,QAAQ3L,GAASN,KAAtB,iBAAP,GAEFgM,UArBO,SAqBE,GACP,OAAQhM,KAAD,eAAuBA,KAAK0K,cAAnC,IAEFyB,UAxBO,WA2BL,IAFA,IAAM1B,EAAN,GAESnK,EAAQN,KAAjB,IAA2BM,GAASN,KAApC,IAA8CM,GAAgBN,KAA9D,KAAyE,CACvE,IAAMoM,EAAQ9L,IAAUN,KAAVM,QAAyBN,KAAKoM,OAA5C,UACA3B,EAAA,KAAczK,KAAKkK,eAAe,OAAQlK,KAAKqM,mBAAmBD,EAAO,CACvE5J,YADuE,4BAEvE4H,MAAO,CACL,oCAAqC9J,IAAUN,KAD1C,eAEL,sCAAuCA,KAAKG,WAAaH,KAAKgM,UAAU1L,IAE1EgM,MAAOtM,KAAKuM,aAN2D,GAOvEhF,SAAU,CAAEiF,UAAW,SAAF,OAAWxM,KAAK4K,OAAOtK,GAAvB,gBAIzB,UAEFmM,QA1CO,WA2CL,IAAMC,EAAQ,UAAH,OAAa1M,KAAKkM,UAAUlM,KAAvC,gBAAW,KACL2M,EAAQ3M,KAAKiL,OAASjL,KAAKwL,gBAAkBxL,KAAK2L,eAAiB3L,KAAzE,KACMoM,EAAQ,MAACpM,KAAKM,QAAmBN,KAAKoM,OAA5C,UACA,OAAOpM,KAAKkK,eAAe,MAAOlK,KAAKqM,mBAAmBD,EAAO,CAC/D5J,YAD+D,4BAE/D4H,MAAO,CACL,mCAAoCpK,KAAKiM,QAAQjM,KAAb,QAEtCsM,MAAO,CACLM,UAAW,UAAF,OAAYD,EAAZ,gBAAyBD,QAIxCH,aAxDO,SAwDK,GACV,MAAiBvM,KAAK6M,YAAtB,GAAM,EAAN,EAAM,EAAKC,EAAX,EAAWA,EACX,MAAO,CACLC,KAAM,GAAF,OAAK,GADJ,GACSC,EAAV,KACJC,IAAK,GAAF,OAAK,GAAS,GAAJH,EAAV,OAGPD,YA/DO,SA+DI,GACT,IAAMK,EAAgBlN,KAAKiL,OAASS,KAAd,GAAtB,IACA,MAAO,CACLsB,EAAGtB,KAAA,KAAUpL,EAAQN,KAAT,KAAqBA,KAArB,QAAT,GAA8DA,KAAKkM,UADjE,GAELY,GAAIpB,KAAA,KAAUpL,EAAQN,KAAT,KAAqBA,KAArB,QAAV,GAA+DA,KAAKkM,UAAU5L,KAGrF6M,YAtEO,SAsEI,GACTrK,EAAA,iBAEA9C,KAAA,sBACAA,KAAA,oBACAA,KAAA,cACAA,KAAA,eAEFoN,UA9EO,SA8EE,GACPtK,EAAA,kBAEA9C,KAAA,cAC4B,OAAxBA,KAAKsL,gBAA2BtL,KAAKgM,UAAUhM,KAAnD,iBACEA,KAAA,eAAqBA,KAArB,iBAGJqN,WAtFO,SAsFG,GAER,GADAvK,EAAA,kBACM9C,KAAD,YAAD,UAAqB8C,EAAA,OAAwB9C,KAAKiG,MAAtD,MAYA,IAVA,IAQA,EARA,EAA6BjG,KAAKiG,MAAMqH,MAAxC,wBAAM,EAAN,EAAM,QAAN,EAAM,IAAcP,EAApB,EAAoBA,KACpB,EAA8B/M,KAAKiG,MAAMsH,WAAzC,wBAAeC,EAAf,EAAQC,MACR,GAA6B,YAAa3K,EAAIA,EAAA,QAAjB,GAA7B,GAAM,EAAN,EAAM,QAAW4K,EAAjB,EAAiBA,QACXC,EAAS,CAAEX,EAAGS,EAAL,EAAgBX,GAAIW,EAAQ,GACrCG,EAAS,CAAEZ,EAAGa,EAAL,EAAqBf,EAAGG,EAAMS,GACvCI,EAAYpC,KAAA,MAAW1L,KAAK2M,MAAMgB,EAAQC,GAAU5N,KAA7B,OAAX,KAAlB,IACM+N,EAAc/N,KAAK2K,QAAU3K,KAAKgO,UAAUL,EAAQC,IAAWJ,EAAaA,EAAaxN,KAA3B,kBAApE,EACMiO,EAAcvC,KAAA,KAAU,GAAK1L,KAAnC,gBAGSoC,EAAT,EAAgBA,EAAhB,EAAiCA,IAAK,CAEpC,GADA9B,EAAQN,KAAKkO,aAAaJ,EAAY1L,EAAIpC,KAAlC,eAAR,GACIA,KAAKgM,UAAT,GAA2B,OAAOhM,KAAKmO,kBAAZ,GAG3B,GADA7N,EAAQN,KAAKkO,aAAaJ,EAAY1L,EAAIpC,KAAlC,eAAR,GACIA,KAAKgM,UAAT,GAA2B,OAAOhM,KAAKmO,kBAAZ,KAG/BD,aA5GO,SA4GK,KACV,IAAM5N,GACJoL,KAAA,MAAWiB,EAAQ3M,KAAnB,iBACC+N,EAAc/N,KAAH,WAFA,IAGVA,KAHU,MAGGA,KAJ8B,IAO/C,OAAI2M,EAAS,IAAM3M,KAAKwL,eAAxB,EAAoDlL,EAE7CyN,EAAc/N,KAAK6K,IAAM7K,KAAX,WAAH,EAAoCA,KAAtD,KAEFmO,kBAvHO,SAuHU,GACf,OAAInO,KAAKqL,mBACPrL,KAAA,oBAGFA,KAAA,iBACAA,KAAA,WAEFoO,OA/HO,SA+HD,GACApO,KAAKmL,aAAT,IACEnL,KAAA,aACAA,KAAA,mBAGJgO,UArIO,SAqIE,KACP,IAAMK,EAAKC,EAAA,EAAOC,EAAlB,EACMC,EAAKF,EAAA,EAAOC,EAAlB,EAEA,OAAO7C,KAAA,KAAU2C,IAAUG,EAA3B,IAEF7B,MA3IO,SA2IF,KACH,IAAMrM,EAAQ,EAAIoL,KAAA,MAAW4C,EAAA,EAAOX,EAAP,EAAkB3N,KAAKgO,UAAUL,EAA5C,GAAyDW,EAAA,EAAOX,EAAlF,GACA,OAAOjC,KAAA,IAAS,IAAApL,EAAcoL,KAA9B,MAIJpJ,OAtNO,SAsND,GAAG,WACD9B,EAAkB,CACtBgC,YADsB,sBAEtB4H,MAAO,gBACL,qCADK,MACiCpK,KAAKM,OACxCN,KAAKyO,cAEV7L,GAAK5C,KAAKK,UAAYL,KAAlB,gBAA+C,CACjD0O,UAAW1O,KADsC,YAEjD2O,QAAS3O,KAFwC,UAGjD4O,WAAa,SAAA9L,GAAD,OAAoB,cAAmB,YAHF,IAIjD+L,WAAY7O,KAJqC,YAKjD8O,SAAU9O,KALuC,UAMjD+O,UAAW/O,KANsC,WAOjDgP,UAAWhP,KAAKqN,YAElB4B,IAAK,SAOP,OAJIjP,KAAKgL,YAAcxK,EAAvB,KACEA,EAAA,SAAgBR,KAAhB,OAGKuC,EAAE,MAAO/B,EAAM,CACpB+B,EAAE,MAAO,CACPC,YADO,6BAEPyM,IAAK,cACJ,CACDjP,KADC,UAEDA,KANJ,mB,wBC9PEkP,EAAe,eAArB,IACMC,EAAiB,eAAvB,IACMC,EAAiBD,EAAA,KAAmB,SAAAE,GAAC,OAAIA,EAA/C,MACMC,EAAU,eAAhB,IACMC,EAAiB,CAAEC,EAAF,OAAaC,EAAb,SAA0BC,EAAG,UAMrC,cAAAzG,EAAA,MAAO,EAAD,KAEnB,QAFa,OAIN,CACPpJ,KADO,gBAGPK,MAAO,CACLyP,aAAc,CAACC,SADV,OAELC,eAAgB,CAACD,SAFZ,OAGLE,eAAgB,CAACF,SAHZ,OAILzP,SAJK,QAKLyK,OAAQ,CACNvH,KADM,OAENC,QAFM,OAGNkG,UAHM,SAGG,GACP,MAAO,CAAC,OAAQ,QAAQuG,SAAxB,KAGJhF,IAZK,OAaLF,IAbK,OAcLxK,SAdK,QAeL2K,WAfK,QAgBLvB,WAhBK,QAiBLnJ,MAjBK,KAkBL0P,YAAazP,SAGfC,KAxBO,WAyBL,MAAO,CACLyP,UADK,KAELC,YAFK,KAGLC,YAHK,KAILC,cAJK,KAKLC,gBALK,KAMLC,gBANK,KAOL/G,OAPK,KAQLG,UAAWV,EAAeuH,OAI9BvM,SAAU,CACRwM,cAAe,CACbrL,IADa,WAEX,OAAOnF,KAAK0J,YAAcV,EAA1B,MAEF5D,IAJa,SAIV,GACDpF,KAAA,UAAiBgJ,EAAjB,OAGJyH,gBAAiB,CACftL,IADe,WAEb,OAAOnF,KAAK0J,YAAcV,EAA1B,QAEF5D,IAJe,SAIZ,GACDpF,KAAA,UAAiBgJ,EAAjB,SAGJ0H,gBAAiB,CACfvL,IADe,WAEb,OAAOnF,KAAK0J,YAAcV,EAA1B,QAEF5D,IAJe,SAIZ,GACDpF,KAAA,UAAiBgJ,EAAjB,SAGJ2H,gBAzBQ,WAyBO,IACb,EADa,OASb,GALEC,EADE5Q,KAAK2P,wBAAT,MACQ,SAAArO,GAAD,OAAkB,wBAAvB,IAEKtB,KAAL,cAGGA,KAAD,MAAcA,KAAlB,IAA4B,OAAO4Q,EAEnC,IAAMC,EAAU7Q,KAAK+K,IAAMpB,OAAO3J,KAAK+K,IAAI+F,MAAM,KAAjC,IAAhB,EACMC,EAAU/Q,KAAK6K,IAAMlB,OAAO3J,KAAK6K,IAAIiG,MAAM,KAAjC,IAAhB,GAEA,OAAQ,SAAAxP,GACN,OAAOA,GAAA,EAAOuP,GACZvP,GADK,EACEyP,KACLH,GAAMA,EAFV,MAKJI,kBA7CQ,WA6CS,IACf,EADe,OAGTC,GAAiBjR,KAAD,wBAAyBA,KAAKiQ,WAAsBjQ,KAAK2Q,gBAAgB3Q,KAA/F,WAOA,GALE4Q,EADE5Q,KAAK6P,0BAAT,MACQ,SAAAvO,GAAD,OAAkB,0BAAvB,IAEKtB,KAAL,gBAGGA,KAAD,MAAcA,KAAlB,IACE,OAAOiR,EAAgBL,EAAK,kBAA5B,GAGF,MAA6B5Q,KAAK+K,IAAM/K,KAAK+K,IAAI+F,MAAM,KAAKxM,IAA/B,QAA6C,CAAC,EAA3E,yBAAM,EAAN,KAAM,EAAN,KACA,EAA6BtE,KAAK6K,IAAM7K,KAAK6K,IAAIiG,MAAM,KAAKxM,IAA/B,QAA6C,CAAC,GAA3E,0BAAM,EAAN,KAAM,EAAN,KACM4M,EAAU,GAAAL,EAAhB,EAA+BM,EACzBC,EAAU,GAAAL,EAAhB,EAA+BM,EAE/B,OAAQ,SAAA/P,GACN,IAAMgQ,EAAO,GAAK,EAAL,UAAb,EACA,OAAOA,GAAA,GACLA,GADK,QAGHV,GAAMA,EAHV,MAMJW,kBAxEQ,WAwES,IACf,EADe,OAGTN,GAAiBjR,KAAD,wBAAyBA,KAAKiQ,WAAsBjQ,KAAK2Q,gBAAgB3Q,KAA/F,WACMwR,EAAkBP,KACpBjR,KAAD,0BACCA,KAAKkQ,aACLlQ,KAAKgR,kBAAkBhR,KAH3B,cAYA,GALE4Q,EADE5Q,KAAK8P,0BAAT,MACQ,SAAAxO,GAAD,OAAkB,0BAAvB,IAEKtB,KAAL,gBAGGA,KAAD,MAAcA,KAAlB,IACE,OAAOwR,EAAkBZ,EAAK,kBAA9B,GAGF,MAAwC5Q,KAAK+K,IAAM/K,KAAK+K,IAAI+F,MAAM,KAAKxM,IAA/B,QAA6C,CAAC,EAAG,EAAzF,yBAAM,EAAN,KAAM,EAAN,KAAM,EAAN,KACA,EAAwCtE,KAAK6K,IAAM7K,KAAK6K,IAAIiG,MAAM,KAAKxM,IAA/B,QAA6C,CAAC,GAAI,GAA1F,0BAAM,EAAN,KAAM,EAAN,KAAM,EAAN,KACM4M,EAAU,KAAAL,EAAA,GAAiBM,EAAjC,GAAmDM,GAAD,GAC5CL,EAAU,KAAAL,EAAA,GAAiBM,EAAjC,GAAmDK,GAAD,GAElD,OAAQ,SAAApQ,GACN,IAAMgQ,EAAO,KAAO,EAAP,UAAyB,GAAK,EAA9B,YAAb,EACA,OAAOA,GAAA,GACLA,GADK,QAGHV,GAAMA,EAHV,MAMJe,OAzGQ,WA0GN,eAAO3R,KAAK4K,SAIhBhK,MAAO,CACLN,MAAO,gBAGTsR,QAvJO,WAwJL5R,KAAA,aAAkBA,KAAlB,OACAA,KAAA,oBAA0BA,KAA1B,YAGFkB,QAAS,CACP2Q,SADO,WAEL,OAAsB,MAAlB7R,KAAKiQ,WAAL,MAA0BjQ,KAAKkQ,aAAyBlQ,KAAD,YAA3D,MAA+EA,KAAKmQ,YAIpF,KAHS,UAAG,OAAArG,EAAA,MAAI9J,KAAD,WAAN,YAA0B,OAAA8J,EAAA,MAAI9J,KAA9B,eAAqDA,KAAKyJ,WAAa,IAAlB,OAAsB,OAAAK,EAAA,MAAI9J,KAA1B,cAA5D,KAKJ8R,UARO,WASL,IAAMxR,EAAQN,KAAd,WACA,OAAIM,GAAgBN,KAAK+R,MAAM,QAASzR,IAE1C0R,UAZO,SAYE,GAEP,GADAhS,KAAA,SACA,MAAIA,KAAKiQ,UAAmB,CAC1B,IAAMgC,EAAUjS,KAAKiQ,WAAc,OAAA1G,GAAA,GAAnC,IACAvJ,KAAA,UAAiBA,KAAKkS,aAAa,OAAnC,GACAlS,KAAA,cAGJmS,aApBO,SAoBK,GACV,GAAI,MAAA7R,GAAJ,KAAqBA,EACnBN,KAAA,eACAA,KAAA,iBACAA,KAAA,sBACK,GAAIM,aAAJ,KACLN,KAAA,UAAiBM,EAAjB,WACAN,KAAA,YAAmBM,EAAnB,aACAN,KAAA,YAAmBM,EAAnB,iBACK,CACL,MAA2CA,EAAA,8DAAsE,IAAI8R,MAArH,yBAAM,EAAN,KAAM,EAAN,KAAM,EAAN,KAAM,EAAN,KAEApS,KAAA,UAAiBuJ,EAASvJ,KAAKqS,cAAcC,SAASlJ,EAA5B,IAAH,GAA8DkJ,SAASlJ,EAA9F,IACApJ,KAAA,YAAmBsS,SAASjJ,EAA5B,IACArJ,KAAA,YAAmBsS,SAAShJ,GAAD,EAA3B,IAGFtJ,KAAA,OAAiC,MAAlBA,KAAKiQ,WAAqBjQ,KAAKiQ,UAAhC,QAAd,MAEFsC,cAvCO,SAuCM,GACX,OAAOnJ,GAASA,EAAD,MAAJ,EAAX,IAEFiJ,cA1CO,SA0CM,KACX,OAAOjJ,EAAA,IAAa,OAAAG,EAAA,GAApB,IAEFzB,QA7CO,SA6CA,GACD9H,KAAK0J,YAAcV,EAAvB,KACEhJ,KAAA,UAAiBA,KAAK2R,OAAS3R,KAAKqS,cAAc/R,EAAON,KAAxC,QAAjB,EACSA,KAAK0J,YAAcV,EAAvB,OACLhJ,KAAA,cAEAA,KAAA,cAEFA,KAAA,aAEFwS,SAvDO,SAuDC,GACNxS,KAAA,sBAAoBuP,EAAevP,KAAnC,eAEA,IAAMyS,EAAazS,KAAK0J,aAAe1J,KAAKyJ,WAAaT,EAAlB,OAA0CA,EAAjF,QAQA,GANIhJ,KAAK0J,YAAcV,EAAvB,KACEhJ,KAAA,UAAiBgJ,EAAjB,OACShJ,KAAKyJ,YAAczJ,KAAK0J,YAAcV,EAA1C,SACLhJ,KAAA,UAAiBgJ,EAAjB,QAGEhJ,KAAKiQ,YAAcjQ,KAAnB,eACFA,KAAKkQ,cAAgBlQ,KADnB,iBAEAA,KAAD,YAAoBA,KAAKmQ,cAAgBnQ,KAF5C,iBAKA,IAAMsR,EAAOtR,KAAb,WACA,OAAIsR,IAEJtR,KAAA,cAAqBA,KAArB,UACAA,KAAA,gBAAuBA,KAAvB,YACAA,KAAA,aAAoBA,KAAKsQ,gBAAkBtQ,KAA3C,aAEAyS,GAAczS,KAAK+R,MAAM,SAAzB,MAEFG,aAhFO,SAgFK,KACV,IAAMQ,EAAY,SAAArP,EAAkBrD,KAAlB,gBAA0C,WAAAqD,EAAoBrD,KAApB,kBAA6CA,KAAzG,kBACA,MAAgB,OAF6C,EAK7D,IAAM2S,EAAQ,WAAAtP,GAET,WAAAA,EAFS,EAIPrD,KAAK2R,OACHrR,EAAA,KADF,EAJP,EASMsS,EAAQD,EAAA,MAAW,SAAAtD,GAAC,OAAIqD,GAAWrD,EAAD,GAAcsD,EAAd,OAA6BA,EAArE,OACA,QAASC,GAAD,GAAD,GAAyBD,EAAzB,OAAwCA,EAA/C,IAEFE,SAjGO,WAkGL,OAAO7S,KAAKkK,eAAe,EAAkB,CAC3ChK,MAAO,CACLwK,cACE1K,KAAK0J,YAAcV,EAAnB,KACIhJ,KADJ,gBAEKA,KAAK0J,YAAcV,EAAnB,OACChJ,KADD,kBAECA,KANH,kBAOLoM,MAAOpM,KAPF,MAQL8S,KAAM9S,KARD,KASLG,SAAUH,KATL,SAUL2K,OAAQ3K,KAAK0J,YAAcV,EAAnB,OAA2ChJ,KAV9C,OAWL4K,OAAQ5K,KAAK0J,YAAcV,EAAnB,KACHhJ,KAAK2R,OAAS3R,KAAd,cAAoC,SAAAsB,GAAD,OADhC,GAEH,SAAAA,GAAD,OAAiB,OAAAwI,EAAA,MAAIxI,EAbpB,IAcLyR,MAAO/S,KAdF,MAeL6K,IAAK7K,KAAK0J,YAAcV,EAAnB,KAA0ChJ,KAAK2R,QAAL,OAAe3R,KAAKuJ,OAApB,GAA1C,GAfA,GAgBLwB,IAAK/K,KAAK0J,YAAcV,EAAnB,MAA0ChJ,KAA1C,eAAyDA,KAAKuJ,OAA9D,GAhBA,EAiBLlJ,SAAUL,KAjBL,SAkBLgL,WAAYhL,KAlBP,WAmBLgT,KAAMrJ,OAAO3J,KAAP,SAAwBA,KAAD,WAAmBA,KAApB,aAnBvB,IAoBLkL,KAAMlL,KAAK0J,YAAcV,EAAnB,OApBD,EAqBL1I,MAAON,KAAK0J,YAAcV,EAAnB,KACHhJ,KADG,UAEFA,KAAK0J,YAAcV,EAAnB,OACChJ,KADD,YAECA,KAAKmQ,aAEbvN,GAAI,CACFvB,MAAOrB,KADL,QAEFiT,OAAQjT,KAAKwS,UAEfvD,IAAK,WAGTiE,aArIO,WAsIL,OAAOlT,KAAKkK,eAAe,MAAOlK,KAAKmT,aAAanT,KAAKoM,OAAvB,UAA2C,CAC3E5J,YAAa,8BACX,CACFxC,KAAKiK,gBAAgB,SAAU,KAAMjK,KAAKsK,SAASC,KAAKC,EAAxD,0BAAqFxK,KAAKG,UAAYH,KADpG,UAEFA,KAAKiK,gBAAgB,SAAU,KAAMjK,KAAKsK,SAASC,KAAKC,EAAxD,0BAAqFxK,KAAKG,UAAYH,KAJxG,aAOFoT,cA7IO,WA8IL,OAAOpT,KAAKkK,eAAe,MAAO,CAChC1H,YADgC,iCAEhC6Q,IAAKrT,KAAK0J,WACT,EACA1J,KAAD,aAAqBA,KAArB,QAAoCA,KADnC,eAEDA,KALF,cAQFsT,eAtJO,WAsJO,WACZ,OAAOtT,KAAKkK,eAAe,EAAkB,CAC3ChK,MAAO,CACLgJ,KAAMlJ,KADD,OAELmJ,aAAcnJ,KAAK2R,SAAW3R,KAFzB,YAGLG,SAAUH,KAHL,SAILoJ,KAAMpJ,KAJD,UAKLqJ,OAAQrJ,KALH,YAMLsJ,OAAQtJ,KANH,YAOLuJ,OAAQvJ,KAPH,OAQLK,SAAUL,KARL,SASLyJ,WAAYzJ,KATP,WAUL0J,UAAW1J,KAAK0J,WAElB9G,GAAI,CACF,mBAAqB,SAAAtC,GAAD,OAAuB,YADzC,GAEF,gBAAkB,SAAAiJ,GAAD,OAAoB,6BAEvC0F,IAjB2C,QAkB3CxH,KAAM,YAKZnF,OA1UO,WA2UL,OAAOtC,KAAKuT,UAAZ,sB","file":"js/chunk-29493e84.13b45e72.js","sourcesContent":["module.exports = __webpack_public_path__ + \"img/pin1.d74f27bd.svg\";","// Components\nimport VInput from '../VInput/VInput'\n\n// Mixins\nimport mixins from '../../util/mixins'\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Helpers\nimport { VNode } from 'vue'\n\ntype ErrorBag = Record<number, boolean>\ntype VInputInstance = InstanceType<typeof VInput>\ntype Watchers = {\n  _uid: number\n  valid: () => void\n  shouldValidate: () => void\n}\n\n/* @vue/component */\nexport default mixins(\n  BindsAttrs,\n  RegistrableProvide('form')\n  /* @vue/component */\n).extend({\n  name: 'v-form',\n\n  provide (): object {\n    return { form: this }\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    disabled: Boolean,\n    lazyValidation: Boolean,\n    readonly: Boolean,\n    value: Boolean,\n  },\n\n  data: () => ({\n    inputs: [] as VInputInstance[],\n    watchers: [] as Watchers[],\n    errorBag: {} as ErrorBag,\n  }),\n\n  watch: {\n    errorBag: {\n      handler (val) {\n        const errors = Object.values(val).includes(true)\n\n        this.$emit('input', !errors)\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n\n  methods: {\n    watchInput (input: any): Watchers {\n      const watcher = (input: any): (() => void) => {\n        return input.$watch('hasError', (val: boolean) => {\n          this.$set(this.errorBag, input._uid, val)\n        }, { immediate: true })\n      }\n\n      const watchers: Watchers = {\n        _uid: input._uid,\n        valid: () => {},\n        shouldValidate: () => {},\n      }\n\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', (val: boolean) => {\n          if (!val) return\n\n          // Only watch if we're not already doing it\n          if (this.errorBag.hasOwnProperty(input._uid)) return\n\n          watchers.valid = watcher(input)\n        })\n      } else {\n        watchers.valid = watcher(input)\n      }\n\n      return watchers\n    },\n    /** @public */\n    validate (): boolean {\n      return this.inputs.filter(input => !input.validate(true)).length === 0\n    },\n    /** @public */\n    reset (): void {\n      this.inputs.forEach(input => input.reset())\n      this.resetErrorBag()\n    },\n    resetErrorBag () {\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(() => {\n          this.errorBag = {}\n        }, 0)\n      }\n    },\n    /** @public */\n    resetValidation () {\n      this.inputs.forEach(input => input.resetValidation())\n      this.resetErrorBag()\n    },\n    register (input: VInputInstance) {\n      this.inputs.push(input)\n      this.watchers.push(this.watchInput(input))\n    },\n    unregister (input: VInputInstance) {\n      const found = this.inputs.find(i => i._uid === input._uid)\n\n      if (!found) return\n\n      const unwatch = this.watchers.find(i => i._uid === found._uid)\n      if (unwatch) {\n        unwatch.valid()\n        unwatch.shouldValidate()\n      }\n\n      this.watchers = this.watchers.filter(i => i._uid !== found._uid)\n      this.inputs = this.inputs.filter(i => i._uid !== found._uid)\n      this.$delete(this.errorBag, found._uid)\n    },\n  },\n\n  render (h): VNode {\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: {\n        novalidate: true,\n        ...this.attrs$,\n      },\n      on: {\n        submit: (e: Event) => this.$emit('submit', e),\n      },\n    }, this.$slots.default)\n  },\n})\n","import VBtn from './VBtn'\n\nexport { VBtn }\nexport default VBtn\n","// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport {\n  getObjectValueByPath,\n  getPropertyFromItem,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { PropType, VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true,\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    } as PropValidator<(item: any, queryText: string, itemText: string) => boolean>,\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | null>,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText)\n        const text = value != null ? String(value) : ''\n\n        return this.filter(item, String(this.internalSearch), text)\n      })\n    },\n    internalSearch: {\n      get (): string | null {\n        return this.lazySearch\n      },\n      set (val: any) { // TODO: this should be `string | null` but it breaks lots of other types\n        // emit update event only when the new\n        // search value is different from previous\n        if (this.lazySearch !== val) {\n          this.lazySearch = val\n          this.$emit('update:search-input', val)\n        }\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.blur()\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = null\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  destroyed () {\n    document.removeEventListener('copy', this.onCopy)\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      this.setMenuIndex(-1)\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n        this.setMenuIndex(0)\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1\n        } else {\n          this.selectedIndex--\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem()\n      }\n    },\n    deleteCurrentItem () {\n      const curIndex = this.selectedIndex\n      const curItem = this.selectedItems[curIndex]\n\n      // Do nothing if input or item is disabled\n      if (\n        !this.isInteractive ||\n        this.getDisabled(curItem)\n      ) return\n\n      const lastIndex = this.selectedItems.length - 1\n\n      // Select the last item if\n      // there is no selection\n      if (\n        this.selectedIndex === -1 &&\n        lastIndex !== 0\n      ) {\n        this.selectedIndex = lastIndex\n\n        return\n      }\n\n      const length = this.selectedItems.length\n      const nextIndex = curIndex !== length - 1\n        ? curIndex\n        : curIndex - 1\n      const nextItem = this.selectedItems[nextIndex]\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : null)\n      } else {\n        this.selectItem(curItem)\n      }\n\n      this.selectedIndex = nextIndex\n    },\n    clearableCallback () {\n      this.internalSearch = null\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = mergeData(input.data!, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        domProps: { value: this.internalSearch },\n      })\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections (): VNode | never[] {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      if (!this.isAppendInner(e.target)) this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown (e: Event) {\n      // Prevent screen from scrolling\n      e.preventDefault()\n\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (\n        !this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (\n        !this.multiple &&\n        !this.valueComparator(\n          this.internalSearch,\n          this.getValue(this.internalValue)\n        )\n      ) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any): boolean {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData?.setData('text/plain', currentItemText)\n      event.clipboardData?.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n","enum SelectingTimes {\n  Hour = 1,\n  Minute = 2,\n  Second = 3\n}\n\nexport { SelectingTimes }\n","import './VTimePickerTitle.sass'\n\n// Mixins\nimport PickerButton from '../../mixins/picker-button'\n\n// Utils\nimport { pad } from '../VDatePicker/util'\nimport mixins from '../../util/mixins'\n\nimport { SelectingTimes } from './SelectingTimes'\nimport { VNode, PropType } from 'vue'\n\nexport default mixins(\n  PickerButton\n/* @vue/component */\n).extend({\n  name: 'v-time-picker-title',\n\n  props: {\n    ampm: Boolean,\n    ampmReadonly: Boolean,\n    disabled: Boolean,\n    hour: Number,\n    minute: Number,\n    second: Number,\n    period: {\n      type: String as PropType<'am' | 'pm'>,\n      validator: period => period === 'am' || period === 'pm',\n    },\n    readonly: Boolean,\n    useSeconds: Boolean,\n    selecting: Number,\n  },\n\n  methods: {\n    genTime () {\n      let hour = this.hour\n      if (this.ampm) {\n        hour = hour ? ((hour - 1) % 12 + 1) : 12\n      }\n\n      const displayedHour = this.hour == null ? '--' : this.ampm ? String(hour) : pad(hour)\n      const displayedMinute = this.minute == null ? '--' : pad(this.minute)\n      const titleContent = [\n        this.genPickerButton('selecting', SelectingTimes.Hour, displayedHour, this.disabled),\n        this.$createElement('span', ':'),\n        this.genPickerButton('selecting', SelectingTimes.Minute, displayedMinute, this.disabled),\n      ]\n\n      if (this.useSeconds) {\n        const displayedSecond = this.second == null ? '--' : pad(this.second)\n        titleContent.push(this.$createElement('span', ':'))\n        titleContent.push(this.genPickerButton('selecting', SelectingTimes.Second, displayedSecond, this.disabled))\n      }\n      return this.$createElement('div', {\n        class: 'v-time-picker-title__time',\n      }, titleContent)\n    },\n    genAmPm () {\n      return this.$createElement('div', {\n        staticClass: 'v-time-picker-title__ampm',\n        class: {\n          'v-time-picker-title__ampm--readonly': this.ampmReadonly,\n        },\n      }, [\n        (!this.ampmReadonly || this.period === 'am') ? this.genPickerButton('period', 'am', this.$vuetify.lang.t('$vuetify.timePicker.am'), this.disabled || this.readonly) : null,\n        (!this.ampmReadonly || this.period === 'pm') ? this.genPickerButton('period', 'pm', this.$vuetify.lang.t('$vuetify.timePicker.pm'), this.disabled || this.readonly) : null,\n      ])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genTime()]\n\n    this.ampm && children.push(this.genAmPm())\n\n    return h('div', {\n      staticClass: 'v-time-picker-title',\n    }, children)\n  },\n})\n","import './VTimePickerClock.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport Vue, { VNode, PropType, VNodeData } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\ninterface Point {\n  x: number\n  y: number\n}\n\ninterface options extends Vue {\n  $refs: {\n    clock: HTMLElement\n    innerClock: HTMLElement\n  }\n}\n\nexport default mixins<options &\n/* eslint-disable indent */\n  ExtractVue<[\n    typeof Colorable,\n    typeof Themeable\n  ]>\n/* eslint-enable indent */\n>(\n  Colorable,\n  Themeable\n/* @vue/component */\n).extend({\n  name: 'v-time-picker-clock',\n\n  props: {\n    allowedValues: Function as PropType<(value: number) => boolean>,\n    ampm: Boolean,\n    disabled: Boolean,\n    double: Boolean,\n    format: {\n      type: Function,\n      default: (val: string | number) => val,\n    } as PropValidator<(val: string | number) => string | number>,\n    max: {\n      type: Number,\n      required: true,\n    },\n    min: {\n      type: Number,\n      required: true,\n    },\n    scrollable: Boolean,\n    readonly: Boolean,\n    rotate: {\n      type: Number,\n      default: 0,\n    },\n    step: {\n      type: Number,\n      default: 1,\n    },\n    value: Number,\n  },\n\n  data () {\n    return {\n      inputValue: this.value,\n      isDragging: false,\n      valueOnMouseDown: null as number | null,\n      valueOnMouseUp: null as number | null,\n    }\n  },\n\n  computed: {\n    count (): number {\n      return this.max - this.min + 1\n    },\n    degreesPerUnit (): number {\n      return 360 / this.roundCount\n    },\n    degrees (): number {\n      return this.degreesPerUnit * Math.PI / 180\n    },\n    displayedValue (): number {\n      return this.value == null ? this.min : this.value\n    },\n    innerRadiusScale (): number {\n      return 0.62\n    },\n    roundCount (): number {\n      return this.double ? (this.count / 2) : this.count\n    },\n  },\n\n  watch: {\n    value (value) {\n      this.inputValue = value\n    },\n  },\n\n  methods: {\n    wheel (e: WheelEvent) {\n      e.preventDefault()\n\n      const delta = Math.sign(-e.deltaY || 1)\n      let value = this.displayedValue\n      do {\n        value = value + delta\n        value = (value - this.min + this.count) % this.count + this.min\n      } while (!this.isAllowed(value) && value !== this.displayedValue)\n\n      if (value !== this.displayedValue) {\n        this.update(value)\n      }\n    },\n    isInner (value: number) {\n      return this.double && (value - this.min >= this.roundCount)\n    },\n    handScale (value: number) {\n      return this.isInner(value) ? this.innerRadiusScale : 1\n    },\n    isAllowed (value: number) {\n      return !this.allowedValues || this.allowedValues(value)\n    },\n    genValues () {\n      const children: VNode[] = []\n\n      for (let value = this.min; value <= this.max; value = value + this.step) {\n        const color = value === this.value && (this.color || 'accent')\n        children.push(this.$createElement('span', this.setBackgroundColor(color, {\n          staticClass: 'v-time-picker-clock__item',\n          class: {\n            'v-time-picker-clock__item--active': value === this.displayedValue,\n            'v-time-picker-clock__item--disabled': this.disabled || !this.isAllowed(value),\n          },\n          style: this.getTransform(value),\n          domProps: { innerHTML: `<span>${this.format(value)}</span>` },\n        })))\n      }\n\n      return children\n    },\n    genHand () {\n      const scale = `scaleY(${this.handScale(this.displayedValue)})`\n      const angle = this.rotate + this.degreesPerUnit * (this.displayedValue - this.min)\n      const color = (this.value != null) && (this.color || 'accent')\n      return this.$createElement('div', this.setBackgroundColor(color, {\n        staticClass: 'v-time-picker-clock__hand',\n        class: {\n          'v-time-picker-clock__hand--inner': this.isInner(this.value),\n        },\n        style: {\n          transform: `rotate(${angle}deg) ${scale}`,\n        },\n      }))\n    },\n    getTransform (i: number) {\n      const { x, y } = this.getPosition(i)\n      return {\n        left: `${50 + x * 50}%`,\n        top: `${50 + y * 50}%`,\n      }\n    },\n    getPosition (value: number) {\n      const rotateRadians = this.rotate * Math.PI / 180\n      return {\n        x: Math.sin((value - this.min) * this.degrees + rotateRadians) * this.handScale(value),\n        y: -Math.cos((value - this.min) * this.degrees + rotateRadians) * this.handScale(value),\n      }\n    },\n    onMouseDown (e: MouseEvent | TouchEvent) {\n      e.preventDefault()\n\n      this.valueOnMouseDown = null\n      this.valueOnMouseUp = null\n      this.isDragging = true\n      this.onDragMove(e)\n    },\n    onMouseUp (e: MouseEvent | TouchEvent) {\n      e.stopPropagation()\n\n      this.isDragging = false\n      if (this.valueOnMouseUp !== null && this.isAllowed(this.valueOnMouseUp)) {\n        this.$emit('change', this.valueOnMouseUp)\n      }\n    },\n    onDragMove (e: MouseEvent | TouchEvent) {\n      e.preventDefault()\n      if ((!this.isDragging && e.type !== 'click') || !this.$refs.clock) return\n\n      const { width, top, left } = this.$refs.clock.getBoundingClientRect()\n      const { width: innerWidth } = this.$refs.innerClock.getBoundingClientRect()\n      const { clientX, clientY } = 'touches' in e ? e.touches[0] : e\n      const center = { x: width / 2, y: -width / 2 }\n      const coords = { x: clientX - left, y: top - clientY }\n      const handAngle = Math.round(this.angle(center, coords) - this.rotate + 360) % 360\n      const insideClick = this.double && this.euclidean(center, coords) < (innerWidth + innerWidth * this.innerRadiusScale) / 4\n      const checksCount = Math.ceil(15 / this.degreesPerUnit)\n      let value\n\n      for (let i = 0; i < checksCount; i++) {\n        value = this.angleToValue(handAngle + i * this.degreesPerUnit, insideClick)\n        if (this.isAllowed(value)) return this.setMouseDownValue(value)\n\n        value = this.angleToValue(handAngle - i * this.degreesPerUnit, insideClick)\n        if (this.isAllowed(value)) return this.setMouseDownValue(value)\n      }\n    },\n    angleToValue (angle: number, insideClick: boolean): number {\n      const value = (\n        Math.round(angle / this.degreesPerUnit) +\n        (insideClick ? this.roundCount : 0)\n      ) % this.count + this.min\n\n      // Necessary to fix edge case when selecting left part of the value(s) at 12 o'clock\n      if (angle < (360 - this.degreesPerUnit / 2)) return value\n\n      return insideClick ? this.max - this.roundCount + 1 : this.min\n    },\n    setMouseDownValue (value: number) {\n      if (this.valueOnMouseDown === null) {\n        this.valueOnMouseDown = value\n      }\n\n      this.valueOnMouseUp = value\n      this.update(value)\n    },\n    update (value: number) {\n      if (this.inputValue !== value) {\n        this.inputValue = value\n        this.$emit('input', value)\n      }\n    },\n    euclidean (p0: Point, p1: Point) {\n      const dx = p1.x - p0.x\n      const dy = p1.y - p0.y\n\n      return Math.sqrt(dx * dx + dy * dy)\n    },\n    angle (center: Point, p1: Point) {\n      const value = 2 * Math.atan2(p1.y - center.y - this.euclidean(center, p1), p1.x - center.x)\n      return Math.abs(value * 180 / Math.PI)\n    },\n  },\n\n  render (h): VNode {\n    const data: VNodeData = {\n      staticClass: 'v-time-picker-clock',\n      class: {\n        'v-time-picker-clock--indeterminate': this.value == null,\n        ...this.themeClasses,\n      },\n      on: (this.readonly || this.disabled) ? undefined : {\n        mousedown: this.onMouseDown,\n        mouseup: this.onMouseUp,\n        mouseleave: (e: MouseEvent) => (this.isDragging && this.onMouseUp(e)),\n        touchstart: this.onMouseDown,\n        touchend: this.onMouseUp,\n        mousemove: this.onDragMove,\n        touchmove: this.onDragMove,\n      },\n      ref: 'clock',\n    }\n\n    if (this.scrollable && data.on) {\n      data.on.wheel = this.wheel\n    }\n\n    return h('div', data, [\n      h('div', {\n        staticClass: 'v-time-picker-clock__inner',\n        ref: 'innerClock',\n      }, [\n        this.genHand(),\n        this.genValues(),\n      ]),\n    ])\n  },\n})\n","// Components\nimport VTimePickerTitle from './VTimePickerTitle'\nimport VTimePickerClock from './VTimePickerClock'\n\n// Mixins\nimport Picker from '../../mixins/picker'\nimport PickerButton from '../../mixins/picker-button'\n\n// Utils\nimport { createRange } from '../../util/helpers'\nimport pad from '../VDatePicker/util/pad'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode, PropType } from 'vue'\nimport { SelectingTimes } from './SelectingTimes'\n\nconst rangeHours24 = createRange(24)\nconst rangeHours12am = createRange(12)\nconst rangeHours12pm = rangeHours12am.map(v => v + 12)\nconst range60 = createRange(60)\nconst selectingNames = { 1: 'hour', 2: 'minute', 3: 'second' }\nexport { SelectingTimes }\n\ntype Period = 'am' | 'pm'\ntype AllowFunction = (val: number) => boolean\n\nexport default mixins(\n  Picker,\n  PickerButton\n/* @vue/component */\n).extend({\n  name: 'v-time-picker',\n\n  props: {\n    allowedHours: [Function, Array] as PropType<AllowFunction | number[]>,\n    allowedMinutes: [Function, Array] as PropType<AllowFunction | number[]>,\n    allowedSeconds: [Function, Array] as PropType<AllowFunction | number[]>,\n    disabled: Boolean,\n    format: {\n      type: String as PropType<'ampm' | '24hr'>,\n      default: 'ampm',\n      validator (val) {\n        return ['ampm', '24hr'].includes(val)\n      },\n    },\n    min: String,\n    max: String,\n    readonly: Boolean,\n    scrollable: Boolean,\n    useSeconds: Boolean,\n    value: null as any as PropType<any>,\n    ampmInTitle: Boolean,\n  },\n\n  data () {\n    return {\n      inputHour: null as number | null,\n      inputMinute: null as number | null,\n      inputSecond: null as number | null,\n      lazyInputHour: null as number | null,\n      lazyInputMinute: null as number | null,\n      lazyInputSecond: null as number | null,\n      period: 'am' as Period,\n      selecting: SelectingTimes.Hour,\n    }\n  },\n\n  computed: {\n    selectingHour: {\n      get (): boolean {\n        return this.selecting === SelectingTimes.Hour\n      },\n      set (v: boolean) {\n        this.selecting = SelectingTimes.Hour\n      },\n    },\n    selectingMinute: {\n      get (): boolean {\n        return this.selecting === SelectingTimes.Minute\n      },\n      set (v: boolean) {\n        this.selecting = SelectingTimes.Minute\n      },\n    },\n    selectingSecond: {\n      get (): boolean {\n        return this.selecting === SelectingTimes.Second\n      },\n      set (v: boolean) {\n        this.selecting = SelectingTimes.Second\n      },\n    },\n    isAllowedHourCb (): AllowFunction {\n      let cb: AllowFunction\n\n      if (this.allowedHours instanceof Array) {\n        cb = (val: number) => (this.allowedHours as number[]).includes(val)\n      } else {\n        cb = this.allowedHours\n      }\n\n      if (!this.min && !this.max) return cb\n\n      const minHour = this.min ? Number(this.min.split(':')[0]) : 0\n      const maxHour = this.max ? Number(this.max.split(':')[0]) : 23\n\n      return (val: number) => {\n        return val >= minHour * 1 &&\n          val <= maxHour * 1 &&\n          (!cb || cb(val))\n      }\n    },\n    isAllowedMinuteCb (): AllowFunction {\n      let cb: AllowFunction\n\n      const isHourAllowed = !this.isAllowedHourCb || this.inputHour === null || this.isAllowedHourCb(this.inputHour)\n      if (this.allowedMinutes instanceof Array) {\n        cb = (val: number) => (this.allowedMinutes as number[]).includes(val)\n      } else {\n        cb = this.allowedMinutes\n      }\n\n      if (!this.min && !this.max) {\n        return isHourAllowed ? cb : () => false\n      }\n\n      const [minHour, minMinute] = this.min ? this.min.split(':').map(Number) : [0, 0]\n      const [maxHour, maxMinute] = this.max ? this.max.split(':').map(Number) : [23, 59]\n      const minTime = minHour * 60 + minMinute * 1\n      const maxTime = maxHour * 60 + maxMinute * 1\n\n      return (val: number) => {\n        const time = 60 * this.inputHour! + val\n        return time >= minTime &&\n          time <= maxTime &&\n          isHourAllowed &&\n          (!cb || cb(val))\n      }\n    },\n    isAllowedSecondCb (): AllowFunction {\n      let cb: AllowFunction\n\n      const isHourAllowed = !this.isAllowedHourCb || this.inputHour === null || this.isAllowedHourCb(this.inputHour)\n      const isMinuteAllowed = isHourAllowed &&\n        (!this.isAllowedMinuteCb ||\n          this.inputMinute === null ||\n          this.isAllowedMinuteCb(this.inputMinute)\n        )\n\n      if (this.allowedSeconds instanceof Array) {\n        cb = (val: number) => (this.allowedSeconds as number[]).includes(val)\n      } else {\n        cb = this.allowedSeconds\n      }\n\n      if (!this.min && !this.max) {\n        return isMinuteAllowed ? cb : () => false\n      }\n\n      const [minHour, minMinute, minSecond] = this.min ? this.min.split(':').map(Number) : [0, 0, 0]\n      const [maxHour, maxMinute, maxSecond] = this.max ? this.max.split(':').map(Number) : [23, 59, 59]\n      const minTime = minHour * 3600 + minMinute * 60 + (minSecond || 0) * 1\n      const maxTime = maxHour * 3600 + maxMinute * 60 + (maxSecond || 0) * 1\n\n      return (val: number) => {\n        const time = 3600 * this.inputHour! + 60 * this.inputMinute! + val\n        return time >= minTime &&\n          time <= maxTime &&\n          isMinuteAllowed &&\n          (!cb || cb(val))\n      }\n    },\n    isAmPm (): boolean {\n      return this.format === 'ampm'\n    },\n  },\n\n  watch: {\n    value: 'setInputData',\n  },\n\n  mounted () {\n    this.setInputData(this.value)\n    this.$on('update:period', this.setPeriod)\n  },\n\n  methods: {\n    genValue () {\n      if (this.inputHour != null && this.inputMinute != null && (!this.useSeconds || this.inputSecond != null)) {\n        return `${pad(this.inputHour)}:${pad(this.inputMinute)}` + (this.useSeconds ? `:${pad(this.inputSecond!)}` : '')\n      }\n\n      return null\n    },\n    emitValue () {\n      const value = this.genValue()\n      if (value !== null) this.$emit('input', value)\n    },\n    setPeriod (period: Period) {\n      this.period = period\n      if (this.inputHour != null) {\n        const newHour = this.inputHour! + (period === 'am' ? -12 : 12)\n        this.inputHour = this.firstAllowed('hour', newHour)\n        this.emitValue()\n      }\n    },\n    setInputData (value: string | null | Date) {\n      if (value == null || value === '') {\n        this.inputHour = null\n        this.inputMinute = null\n        this.inputSecond = null\n      } else if (value instanceof Date) {\n        this.inputHour = value.getHours()\n        this.inputMinute = value.getMinutes()\n        this.inputSecond = value.getSeconds()\n      } else {\n        const [, hour, minute, , second, period] = value.trim().toLowerCase().match(/^(\\d+):(\\d+)(:(\\d+))?([ap]m)?$/) || new Array(6)\n\n        this.inputHour = period ? this.convert12to24(parseInt(hour, 10), period as Period) : parseInt(hour, 10)\n        this.inputMinute = parseInt(minute, 10)\n        this.inputSecond = parseInt(second || 0, 10)\n      }\n\n      this.period = (this.inputHour == null || this.inputHour < 12) ? 'am' : 'pm'\n    },\n    convert24to12 (hour: number) {\n      return hour ? ((hour - 1) % 12 + 1) : 12\n    },\n    convert12to24 (hour: number, period: Period) {\n      return hour % 12 + (period === 'pm' ? 12 : 0)\n    },\n    onInput (value: number) {\n      if (this.selecting === SelectingTimes.Hour) {\n        this.inputHour = this.isAmPm ? this.convert12to24(value, this.period) : value\n      } else if (this.selecting === SelectingTimes.Minute) {\n        this.inputMinute = value\n      } else {\n        this.inputSecond = value\n      }\n      this.emitValue()\n    },\n    onChange (value: number) {\n      this.$emit(`click:${selectingNames[this.selecting]}`, value)\n\n      const emitChange = this.selecting === (this.useSeconds ? SelectingTimes.Second : SelectingTimes.Minute)\n\n      if (this.selecting === SelectingTimes.Hour) {\n        this.selecting = SelectingTimes.Minute\n      } else if (this.useSeconds && this.selecting === SelectingTimes.Minute) {\n        this.selecting = SelectingTimes.Second\n      }\n\n      if (this.inputHour === this.lazyInputHour &&\n        this.inputMinute === this.lazyInputMinute &&\n        (!this.useSeconds || this.inputSecond === this.lazyInputSecond)\n      ) return\n\n      const time = this.genValue()\n      if (time === null) return\n\n      this.lazyInputHour = this.inputHour\n      this.lazyInputMinute = this.inputMinute\n      this.useSeconds && (this.lazyInputSecond = this.inputSecond)\n\n      emitChange && this.$emit('change', time)\n    },\n    firstAllowed (type: 'hour' | 'minute' | 'second', value: number) {\n      const allowedFn = type === 'hour' ? this.isAllowedHourCb : (type === 'minute' ? this.isAllowedMinuteCb : this.isAllowedSecondCb)\n      if (!allowedFn) return value\n\n      // TODO: clean up\n      const range = type === 'minute'\n        ? range60\n        : (type === 'second'\n          ? range60\n          : (this.isAmPm\n            ? (value < 12\n              ? rangeHours12am\n              : rangeHours12pm)\n            : rangeHours24))\n      const first = range.find(v => allowedFn((v + value) % range.length + range[0]))\n      return ((first || 0) + value) % range.length + range[0]\n    },\n    genClock () {\n      return this.$createElement(VTimePickerClock, {\n        props: {\n          allowedValues:\n            this.selecting === SelectingTimes.Hour\n              ? this.isAllowedHourCb\n              : (this.selecting === SelectingTimes.Minute\n                ? this.isAllowedMinuteCb\n                : this.isAllowedSecondCb),\n          color: this.color,\n          dark: this.dark,\n          disabled: this.disabled,\n          double: this.selecting === SelectingTimes.Hour && !this.isAmPm,\n          format: this.selecting === SelectingTimes.Hour\n            ? (this.isAmPm ? this.convert24to12 : (val: number) => val)\n            : (val: number) => pad(val, 2),\n          light: this.light,\n          max: this.selecting === SelectingTimes.Hour ? (this.isAmPm && this.period === 'am' ? 11 : 23) : 59,\n          min: this.selecting === SelectingTimes.Hour && this.isAmPm && this.period === 'pm' ? 12 : 0,\n          readonly: this.readonly,\n          scrollable: this.scrollable,\n          size: Number(this.width) - ((!this.fullWidth && this.landscape) ? 80 : 20),\n          step: this.selecting === SelectingTimes.Hour ? 1 : 5,\n          value: this.selecting === SelectingTimes.Hour\n            ? this.inputHour\n            : (this.selecting === SelectingTimes.Minute\n              ? this.inputMinute\n              : this.inputSecond),\n        },\n        on: {\n          input: this.onInput,\n          change: this.onChange,\n        },\n        ref: 'clock',\n      })\n    },\n    genClockAmPm () {\n      return this.$createElement('div', this.setTextColor(this.color || 'primary', {\n        staticClass: 'v-time-picker-clock__ampm',\n      }), [\n        this.genPickerButton('period', 'am', this.$vuetify.lang.t('$vuetify.timePicker.am'), this.disabled || this.readonly),\n        this.genPickerButton('period', 'pm', this.$vuetify.lang.t('$vuetify.timePicker.pm'), this.disabled || this.readonly),\n      ])\n    },\n    genPickerBody () {\n      return this.$createElement('div', {\n        staticClass: 'v-time-picker-clock__container',\n        key: this.selecting,\n      }, [\n        !this.ampmInTitle && this.isAmPm && this.genClockAmPm(),\n        this.genClock(),\n      ])\n    },\n    genPickerTitle () {\n      return this.$createElement(VTimePickerTitle, {\n        props: {\n          ampm: this.isAmPm,\n          ampmReadonly: this.isAmPm && !this.ampmInTitle,\n          disabled: this.disabled,\n          hour: this.inputHour,\n          minute: this.inputMinute,\n          second: this.inputSecond,\n          period: this.period,\n          readonly: this.readonly,\n          useSeconds: this.useSeconds,\n          selecting: this.selecting,\n        },\n        on: {\n          'update:selecting': (value: 1 | 2 | 3) => (this.selecting = value),\n          'update:period': (period: string) => this.$emit('update:period', period),\n        },\n        ref: 'title',\n        slot: 'title',\n      })\n    },\n  },\n\n  render (): VNode {\n    return this.genPicker('v-picker--time')\n  },\n})\n"],"sourceRoot":""}